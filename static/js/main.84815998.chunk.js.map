{"version":3,"sources":["store/configureStore.js","helpers/auth.js","components/Login.js","components/Loader.js","helpers/validations.js","store/auth/authReducer.js","store/user/userReducer.js","store/filter/filterReducer.js","store/playlist/playlistReducer.js","store/rootReducer.js","store/auth/authActions.js","helpers/api.js","store/playlist/playlistActions.js","store/filter/filterActions.js","components/filters/FiltersForm.js","components/filters/FiltersWrapper.js","components/SearchBarForm.js","store/user/userActions.js","components/Navbar.js","components/filters/FiltersBadges.js","components/Playlists.js","components/Playlist.js","components/App.js","index.js"],"names":["store","authSettings","endpoint","clientId","process","redirectUri","scopes","getAuthEndpoint","concat","join","goToLogin","window","location","assign","Login","react_default","a","createElement","className","Jumbotron_default","variant","role","aria-labelledby","id","Button_default","size","href","Loader","props","Spinner_default","Object","animation","validations","number","value","Number","isNaN","undefined","minValue","min","maxValue","max","INITIAL_STATE","access_token","loading","user","defs","filters_query","local_filters_query","response","rootReducer","combineReducers","toastr","toastrReducer","auth","state","arguments","length","action","type","objectSpread","payload","filters","playlists","form","formReducer","clearToken","dispatch","localStorage","removeItem","getToken","hash","substring","split","reduce","initial","item","init","parts","decodeURIComponent","setItem","getItem","baseUrl","clearSession","apiRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","options","method","url","resp","_args","wrap","_context","prev","next","axios","headers","Authorization","getState","data","params","sent","t0","status","confirm","onOk","onCancel","abrupt","stop","apply","this","getErrorMessage","error","defaultMsg","message","e","getPlaylists","then","catch","errorMsg","console","getFiltersDefs","map","definition","def","validate","values","unshift","key","validation","v","primitiveType","push","inputType","entityType","pattern","findInArrayOfObjects","array","filter","obj","CustomDatePicker","input","react_datepicker_es","onChange","showTimeSelect","timeIntervals","dateFormat","selected","Date","FieldInput","_ref2","propInput","label","meta","idPrefix","asType","name","Form_default","Group","controlId","Label","Control","as","isInvalid","opt","Badge_default","defaultProps","FiltersForm","_ref3","filtersDefs","getFiltersDefsConnected","useEffect","components_Loader","Row","Field","component","reduxForm","filtersForm","syncErrors","keys","forEach","timestamp","replace","moment","format","connect","bindActionCreators","FiltersWrapper","titleId","Container_default","fluid","filters_FiltersForm","InputGroup_default","Append","MdSearch_default","fontSize","color","inline","clearUser","getUser","CustomNavbar","token","getUserConnect","logout","clearUserConnect","Navbar_default","fixed","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav_default","components_SearchBarForm","NavDropdown_default","title","images","Image_default","alt","src","roundedCircle","display_name","Item","onClick","preventDefault","filters_FiltersWrapper","FiltersBadges","localSearchForm","toLocaleString","i","setIntervalId","Playlist","playlist","rounded","tracks","total","owner","Playlists","getPlaylistsConnect","clearInterval","setInterval","filteredPlaylists","items","searchStr","toLowerCase","indexOf","filterPlaylists","filters_FiltersBadges","Row_default","Col_default","components_Playlist","App","clearTokenConnect","getTokenConnect","accessToken","components_Navbar","lib_default","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","components_Login","style","flexGrow","components_Playlists","md","lg","xl","initialState","createStore","applyMiddleware","thunk","multi","promise","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.84815998.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nlet store; // eslint-disable-line import/no-mutable-exports\n\nconst configureStore = (initialState) => {\n  store = createStore(rootReducer, initialState, applyMiddleware(thunk, multi, promise));\n  return store;\n};\n\nexport { configureStore, store };\n","const authSettings = {\n  endpoint: 'https://accounts.spotify.com/authorize',\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  redirectUri: process.env.NODE_ENV === 'production' ? process.env.REACT_APP_PROD_REDIRECT_URL : process.env.REACT_APP_DEV_REDIRECT_URL,\n  scopes: [],\n};\n\nexport const ACCESS_TOKEN_KEY = 'access_token';\n\n/**\n *  Generate the auth endpoint given the auth parameters\n */\nexport const getAuthEndpoint = () => `${authSettings.endpoint}?client_id=${authSettings.clientId}&redirect_uri=${authSettings.redirectUri}&scope=${authSettings.scopes.join('%20')}&response_type=token&show_dialog=true`;\n\nexport const goToLogin = () => {\n  window.location.assign(getAuthEndpoint());\n};\n\n/**\n * Given the url hash string, parse it and return\n * an object with all YRL parameters\n*/\nexport const parseUrlHash = urlHash => urlHash\n  .substring(1)\n  .split('&')\n  .reduce((initial, item) => {\n    const init = initial;\n    if (item) {\n      const parts = item.split('=');\n      init[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return init;\n  }, {});\n","\nimport React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport { getAuthEndpoint } from '../helpers/auth';\n\nconst Login = () => (\n  <div className=\"contentLogin h-100 align-items-center justify-content-center text-white\">\n    <Jumbotron variant=\"dark\" className=\"loginWrapper\" role=\"main\" aria-labelledby=\"loginJTTitle\">\n      <h1 id=\"loginJTTitle\">Bem Vindo ao Spotifood</h1>\n      <p>\n        Entre usando sua conta do Spotify e aproveite uma nova maneira de visualizar\n        suas playlists!\n      </p>\n      <p>\n        <Button size=\"lg\" variant=\"success\" href={getAuthEndpoint()}>Entre com Spotify</Button>\n      </p>\n    </Jumbotron>\n  </div>\n);\n\nexport default Login;\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport '../stylesheets/loader.css';\n\nconst Loader = props => (\n  <div className=\"loaderWrapper\">\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      {...props}\n    >\n      <span className=\"sr-only\">Carregando...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loader;\n","const validations = {\n  number: value => (value && Number.isNaN(Number(value)) ? 'Deve ser um número' : undefined),\n\n  minValue: min => value => (value && value < min ? `Deve ser pelo menos ${min}` : undefined),\n\n  maxValue: max => value => (value && value > max ? `Não pode ser maior que ${max}` : undefined),\n};\n\nexport default validations;\n","const INITIAL_STATE = {\n  access_token: null,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'CLEAR_TOKEN':\n      return { ...state, access_token: null };\n    case 'GET_TOKEN':\n      return { ...state, access_token: action.payload };\n    default:\n      return state;\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  user: {},\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USER':\n      return { ...state, user: action.payload };\n    case 'LOADING_USER':\n      return { ...state, loading: !state.loading };\n    default:\n      return state;\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  defs: [],\n  filters_query: {},\n  local_filters_query: {},\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOAD_FILTERS_DEFS':\n      return { ...state, defs: action.payload };\n    case 'LOADING_FILTERS':\n      return { ...state, loading: !state.loading };\n    case 'UPDATE_FILTERS_QUERY':\n      return { ...state, filters_query: action.payload };\n    case 'UPDATE_LOCAL_FILTERS_QUERY':\n      return { ...state, local_filters_query: action.payload };\n    default:\n      return state;\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  response: {},\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'PLAYLISTS':\n      return { ...state, response: action.payload };\n    case 'LOADING_PLAYLISTS':\n      return { ...state, loading: !state.loading };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport { reducer as formReducer } from 'redux-form';\nimport auth from './auth/authReducer';\nimport user from './user/userReducer';\nimport filters from './filter/filterReducer';\nimport playlists from './playlist/playlistReducer';\n\nconst rootReducer = combineReducers({\n  toastr: toastrReducer,\n  auth,\n  user,\n  filters,\n  playlists,\n  form: formReducer,\n});\n\nexport default rootReducer;\n","import { ACCESS_TOKEN_KEY, parseUrlHash } from '../../helpers/auth';\n\nexport const clearToken = () => (dispatch) => {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n  dispatch({\n    type: 'CLEAR_TOKEN',\n  });\n};\n\nexport const getToken = () => (dispatch) => {\n  const hash = parseUrlHash(window.location.hash);\n\n  window.location.hash = '';\n\n  if (hash.access_token) {\n    localStorage.setItem(ACCESS_TOKEN_KEY, hash.access_token);\n  }\n\n  const currentToken = localStorage.getItem(ACCESS_TOKEN_KEY);\n\n  dispatch({\n    type: 'GET_TOKEN',\n    payload: currentToken,\n  });\n};\n","import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { goToLogin } from './auth';\nimport { store } from '../store/configureStore';\nimport { clearToken } from '../store/auth/authActions';\n\nconst baseUrl = 'https://api.spotify.com/v1';\n\nconst clearSession = () => {\n  store.dispatch(clearToken());\n};\n\nconst apiRequest = async (options = {}) => {\n  const method = (options.method) ? options.method : 'get';\n  const url = (options.url) ? options.url : baseUrl;\n\n  let resp;\n\n  try {\n    resp = await axios({\n      method,\n      url,\n      headers: {\n        Authorization: `Bearer ${store.getState().auth.access_token}`,\n        ...options.headers,\n      },\n      data: options.data,\n      params: options.params,\n    });\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      toastr.confirm('Sessão expirada. Deseja entrar novamente?', {\n        onOk: goToLogin,\n        onCancel: clearSession,\n      });\n    }\n    throw error;\n  }\n\n  return resp;\n};\n\n/**\n * Given an API error, and a default error message,\n * tries to get the response error message. If not available\n * returns the default message.\n * @param {objet} error\n * @param {string} defaultMsg\n */\nconst getErrorMessage = (error, defaultMsg) => {\n  try {\n    return error.response.data.error.message;\n  } catch (e) {\n    return defaultMsg;\n  }\n};\n\nexport {\n  baseUrl,\n  apiRequest,\n  getErrorMessage,\n};\n","import { toastr } from 'react-redux-toastr';\nimport { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\n\nexport const loading = () => ({\n  type: 'LOADING_PLAYLISTS',\n});\n\nexport const getPlaylists = () => (dispatch, getState) => {\n  dispatch(loading());\n\n  apiRequest({\n    method: 'get',\n    url: `${baseUrl}/browse/featured-playlists`,\n    params: getState().filters.filters_query,\n  }).then((resp) => {\n    dispatch([\n      {\n        type: 'PLAYLISTS',\n        payload: resp.data.playlists,\n      },\n      loading(),\n    ]);\n  }).catch((error) => {\n    const errorMsg = getErrorMessage(error, 'Erro ao carregar lista de playlists');\n    console.error(errorMsg, error);\n    toastr.error('Error', errorMsg);\n    dispatch([\n      { type: 'PLAYLISTS', payload: {} },\n      loading(),\n    ]);\n  });\n};\n","import { toastr } from 'react-redux-toastr';\nimport axios from 'axios';\nimport moment from 'moment';\nimport validations from '../../helpers/validations';\nimport { getPlaylists } from '../playlist/playlistActions';\n\nconst FILTER_URL = 'https://www.mocky.io/v2/5a25fade2e0000213aa90776';\n\nexport const loading = () => ({\n  type: 'LOADING_FILTERS',\n});\n\nconst parseFilters = filters => filters.map((definition) => {\n  const def = {\n    ...definition,\n    type: 'input',\n    validate: [],\n  };\n\n  if (def.values) {\n    def.type = 'select-multi';\n    // Add default empty option on all selects\n    def.values.unshift({\n      key: '',\n      value: '',\n    });\n  }\n\n  if (def.validation) {\n    const v = def.validation;\n\n    if (v.primitiveType === 'INTEGER') {\n      def.validate.push(validations.number);\n      def.inputType = 'number';\n    }\n\n    if (v.min) def.validate.push(validations.minValue(v.min));\n\n    if (v.max) def.validate.push(validations.maxValue(v.max));\n\n    if (v.entityType) def.entityType = v.entityType;\n\n    if (v.pattern) def.pattern = v.pattern;\n  }\n  return def;\n});\n\nexport const getFiltersDefs = () => (dispatch) => {\n  dispatch(loading());\n\n  axios(FILTER_URL).then((resp) => {\n    const defs = resp.data.filters;\n\n    dispatch([\n      {\n        type: 'LOAD_FILTERS_DEFS',\n        payload: parseFilters(defs),\n      },\n      loading(),\n    ]);\n  }).catch(() => {\n    toastr.error('Error', 'Erro ao carregar filtros');\n    dispatch([\n      { type: 'LOAD_FILTERS_DEFS', payload: {} },\n      loading(),\n    ]);\n  });\n};\n\n\nexport const findInArrayOfObjects = (array, id) => array.filter(obj => obj.id === id);\n\nexport const updateFilterQuery = () => (dispatch, getState) => {\n  const state = getState();\n  const form = state.form.filtersForm;\n  const filtersDefs = state.filters.defs;\n  const values = (form.values) ? form.values : {};\n\n  // Remove all inputs with errors\n  if (form.syncErrors) {\n    Object.keys(form.syncErrors).forEach(key => delete values[key]);\n  }\n\n  // Parse timestamp\n  if (values.timestamp) {\n    try {\n      const def = findInArrayOfObjects(filtersDefs, 'timestamp')[0];\n      // The pattern used on our filters definitions is different than the\n      // pattern used by moment\n      const pattern = def.pattern\n        .replace('yyyy', 'YYYY')\n        .replace('dd', 'DD');\n      values.timestamp = moment(values.timestamp).format(pattern);\n      // Error parsing filter - delete and log\n    } catch (e) {\n      console.error('Error while parsing timestamp value.', e);\n      delete values.timestamp;\n    }\n  }\n\n  return dispatch([\n    {\n      type: 'UPDATE_FILTERS_QUERY',\n      payload: values,\n    },\n    getPlaylists(),\n  ]);\n};\n","import React, { useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\nimport DatePicker from 'react-datepicker';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Loader from '../Loader';\nimport { getFiltersDefs, updateFilterQuery } from '../../store/filter/filterActions';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst CustomDatePicker = ({ input }) => (\n  <div>\n    <DatePicker\n      id={input.id}\n      onChange={input.onChange}\n      showTimeSelect\n      timeIntervals={1}\n      className=\"form-control\"\n      dateFormat=\"dd/MM/yyyy h:mm aa\"\n      selected={input.value ? new Date(input.value) : null}\n    />\n  </div>\n);\n\nCustomDatePicker.propTypes = {\n  input: PropTypes.object.isRequired,\n};\n\nconst FieldInput = ({\n  input: propInput, label, meta, type, min, max, values, inputType, entityType, idPrefix,\n}) => {\n  let asType = type;\n  if (type === 'select-multi') asType = 'select';\n  if (entityType === 'DATE_TIME') asType = CustomDatePicker;\n\n  const input = {\n    ...propInput,\n    id: `${idPrefix}-${propInput.name}`,\n  };\n\n  return (\n    <Form.Group controlId={input.id} className=\"w-100\">\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        as={asType}\n        name={input.name}\n        type={inputType}\n        min={min}\n        max={max}\n        value={input.value}\n        onChange={input.onChange}\n        isInvalid={meta.error}\n        meta={meta}\n        input={input}\n      >\n        {values && values.map(opt => (\n          <option key={`filter_option_${input.name}_${opt.value}`} value={opt.value}>{opt.name}</option>\n        ))}\n      </Form.Control>\n      {meta.error && (\n        <Badge variant=\"danger\">{meta.error}</Badge>\n      )}\n    </Form.Group>\n  );\n};\n\nFieldInput.propTypes = {\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string.isRequired,\n  meta: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  values: PropTypes.array,\n  inputType: PropTypes.string,\n  entityType: PropTypes.string,\n  idPrefix: PropTypes.string.isRequired,\n};\n\nFieldInput.defaultProps = {\n  min: null,\n  max: null,\n  values: null,\n  entityType: '',\n  inputType: null,\n};\n\nlet FiltersForm = ({\n  filtersDefs, getFiltersDefsConnected, loading, idPrefix,\n}) => {\n  useEffect(() => {\n    getFiltersDefsConnected();\n  }, [getFiltersDefsConnected]);\n\n  return (\n    <Form className=\"ml-3 mr-3 filtersForm\">\n      {loading && (\n        <Loader />\n      )}\n      {filtersDefs && filtersDefs.map(filter => (\n        <Form.Row key={`filters_api_${filter.id}`}>\n          <Field\n            {...filter}\n            label={filter.name}\n            name={filter.id}\n            idPrefix={idPrefix}\n            inputType={filter.inputType}\n            component={FieldInput}\n          />\n        </Form.Row>\n      ))}\n    </Form>\n  );\n};\n\nFiltersForm.propTypes = {\n  filtersDefs: PropTypes.array,\n  getFiltersDefsConnected: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  idPrefix: PropTypes.string.isRequired,\n};\n\nFiltersForm.defaultProps = {\n  filtersDefs: [],\n  loading: true,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.filters.loading,\n    filtersDefs: state.filters.defs,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getFiltersDefsConnected: getFiltersDefs }, dispatch);\n}\n\nFiltersForm = reduxForm({\n  form: 'filtersForm',\n  onChange: (values, dispatch) => {\n    dispatch(updateFilterQuery(values));\n  },\n})(FiltersForm);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersForm);\n","\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport PropTypes from 'prop-types';\nimport FiltersForm from './FiltersForm';\n\nimport '../../stylesheets/filtersWrapper.css';\n\nconst FiltersWrapper = ({ idPrefix }) => {\n  const titleId = `${idPrefix}-title`;\n  return (\n    <Container fluid role=\"form\" aria-labelledby={titleId}>\n      <h1 className=\"mt-3\" id={titleId}>Filters</h1>\n      <FiltersForm idPrefix={idPrefix} />\n    </Container>\n  );\n};\n\nFiltersWrapper.propTypes = {\n  idPrefix: PropTypes.string.isRequired,\n};\n\nexport default FiltersWrapper;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport MdSearch from 'react-ionicons/lib/MdSearch';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nconst FieldInput = ({ input, meta }) => (\n  <InputGroup>\n    <Form.Group\n      className=\"customSearchInput\"\n      controlId={`navForm-${input.name}`}\n    >\n      <Form.Label className=\"mr-2\">Busca: </Form.Label>\n      <Form.Control\n        {...input}\n        type=\"text\"\n        meta={meta}\n      />\n    </Form.Group>\n    <InputGroup.Append>\n      <MdSearch\n        fontSize=\"2rem\"\n        color=\"#fff\"\n      />\n    </InputGroup.Append>\n  </InputGroup>\n);\n\nFieldInput.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n};\n\nconst SearchBarForm = () => (\n  <Form inline className=\"justify-content-center mr-md-5\">\n    <Field\n      label=\"Nome\"\n      name=\"name\"\n      id=\"name\"\n      inputType=\"input\"\n      component={FieldInput}\n    />\n  </Form>\n);\n\nexport default reduxForm({\n  form: 'localSearchForm',\n})(SearchBarForm);\n","import { toastr } from 'react-redux-toastr';\nimport { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\n\nexport const loading = () => ({\n  type: 'LOADING_USER',\n});\n\nexport const clearUser = () => (dispatch) => {\n  dispatch(\n    {\n      type: 'USER',\n      payload: null,\n    },\n  );\n};\n\nexport const getUser = () => (dispatch) => {\n  dispatch(loading());\n\n  apiRequest({\n    method: 'get',\n    url: `${baseUrl}/me`,\n  }).then((resp) => {\n    dispatch([\n      {\n        type: 'USER',\n        payload: resp.data,\n      },\n      loading(),\n    ]);\n  }).catch((error) => {\n    const errorMsg = getErrorMessage(error, 'Erro ao carregar as informações do usuário');\n    console.error(errorMsg, error);\n    toastr.error('Error', errorMsg);\n    dispatch([\n      { type: 'USER', payload: {} },\n      loading(),\n    ]);\n  });\n};\n","import React, { useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Filters from './filters/FiltersWrapper';\nimport SearchBarForm from './SearchBarForm';\nimport { getUser, clearUser } from '../store/user/userActions';\n\nimport '../stylesheets/navbar.css';\n\nconst CustomNavbar = ({\n  token, user, getUserConnect, logout, clearUserConnect,\n}) => {\n  useEffect(() => {\n    if (token) getUserConnect();\n  }, [token, getUserConnect]);\n\n  const logoutOnClick = (e) => {\n    e.preventDefault();\n    clearUserConnect();\n    if (logout) logout();\n  };\n\n  return (\n    <Navbar fixed=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Spotifood</Navbar.Brand>\n      {token && user && (\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      )}\n      {token && user && (\n        <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end text-white\">\n\n          <Nav>\n            <SearchBarForm />\n            <NavDropdown\n              className=\"loggedInUserDropdown\"\n              title={(\n                <span>\n                  {user.images && user.images.length > 0 && (\n                    <Image alt=\"Logged In Profile Picture\" className=\"userImage\" src={user.images[0].url} roundedCircle />\n                  )}\n                  <b>{user.display_name}</b>\n                </span>\n              )}\n              id=\"collasible-nav-dropdown\"\n            >\n              <NavDropdown.Item onClick={logoutOnClick}>Sair</NavDropdown.Item>\n            </NavDropdown>\n            <div className=\"filtersWrapperNav\">\n              <Filters idPrefix=\"navFilterForm\" />\n            </div>\n          </Nav>\n        </Navbar.Collapse>\n      )}\n    </Navbar>\n  );\n};\n\nCustomNavbar.propTypes = {\n  token: PropTypes.string,\n  user: PropTypes.object,\n  getUserConnect: PropTypes.func.isRequired,\n  clearUserConnect: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nCustomNavbar.defaultProps = {\n  token: '',\n  user: {},\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user.user,\n    token: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUserConnect: getUser,\n    clearUserConnect: clearUser,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomNavbar);\n","\nimport React from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { findInArrayOfObjects } from '../../store/filter/filterActions';\n\nconst FiltersBadges = ({ filtersForm, localSearchForm, filtersDefs }) => {\n  const filters = [];\n\n  if (filtersForm && filtersForm.values) {\n    Object.keys(filtersForm.values).forEach((key) => {\n      const obj = findInArrayOfObjects(filtersDefs, key)[0];\n      let value = filtersForm.values[key];\n\n      if (obj.validation && obj.validation.entityType === 'DATE_TIME') {\n        try {\n          value = new Date(value).toLocaleString();\n        } catch (e) {\n          // continue regardless of error\n        }\n      }\n\n      filters.push({\n        key,\n        name: findInArrayOfObjects(filtersDefs, key)[0].name,\n        value,\n      });\n    });\n  }\n\n  if (localSearchForm && localSearchForm.values && localSearchForm.values.name) {\n    filters.push({\n      key: 'name',\n      name: 'Nome',\n      value: localSearchForm.values.name,\n    });\n  }\n\n  return (\n    <div>\n      {filters.map((filter, i) => (\n        <Badge\n          key={filter.key}\n          variant={`info ${(i > 0 && 'ml-4')}`}\n        >\n          {`${filter.name}: ${filter.value}`}\n        </Badge>\n      ))}\n    </div>\n  );\n};\n\nFiltersBadges.propTypes = {\n  filtersForm: PropTypes.object,\n  localSearchForm: PropTypes.object,\n  filtersDefs: PropTypes.array,\n};\n\nFiltersBadges.defaultProps = {\n  filtersForm: {},\n  localSearchForm: {},\n  filtersDefs: [],\n};\n\nfunction mapStateToProps(state) {\n  return {\n    filtersForm: state.form.filtersForm,\n    localSearchForm: state.form.localSearchForm,\n    filtersDefs: state.filters.defs,\n  };\n}\n\nexport default connect(mapStateToProps)(FiltersBadges);\n","import React, { useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Loader from './Loader';\nimport FiltersBadges from './filters/FiltersBadges';\nimport Playlist from './Playlist';\nimport { getPlaylists } from '../store/playlist/playlistActions';\n\nlet setIntervalId;\nconst REFRESH_PL_MS = 30 * 1000;\n\nconst filterPlaylists = (playlists, localSearchForm) => {\n  if (!playlists || !playlists.items) return [];\n\n  if (!localSearchForm.values\n      || !localSearchForm.values.name) return playlists.items;\n\n  const searchStr = localSearchForm.values.name.toLowerCase();\n\n  return playlists.items.filter(playlist => playlist.name.toLowerCase().indexOf(searchStr) > -1);\n};\n\nconst Playlists = ({\n  playlists, getPlaylistsConnect, loading, localSearchForm,\n}) => {\n  // When the component starts, load the playlits\n  // and set the playlist to be refreshed\n  useEffect(() => {\n    getPlaylistsConnect();\n    if (setIntervalId) clearInterval(setIntervalId);\n    setIntervalId = setInterval(() => {\n      getPlaylistsConnect();\n    }, REFRESH_PL_MS);\n  }, [getPlaylistsConnect]);\n\n  const filteredPlaylists = filterPlaylists(playlists, localSearchForm);\n\n  return (\n    <Container fluid className=\"playlistsWrapper\" role=\"main\" aria-labelledby=\"playlistsTitle\">\n      <h1 className=\"mt-3\" id=\"playlistsTitle\">Playlists </h1>\n      <FiltersBadges />\n      <Row>\n        {loading && (\n        <Loader />\n        )}\n        {!loading && filteredPlaylists && filteredPlaylists.map(playlist => (\n          <Col key={`playlist_wrapper_${playlist.id}`}>\n            <Playlist playlist={playlist} />\n          </Col>\n        ))}\n        {(!filteredPlaylists || filteredPlaylists.length === 0) && !loading && (\n        <Col className=\"h-100 justify-content-center align-items-center d-flex\">\n          <p>Nenhuma playlist disponível</p>\n        </Col>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nPlaylists.propTypes = {\n  playlists: PropTypes.object,\n  getPlaylistsConnect: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  localSearchForm: PropTypes.object,\n};\n\nPlaylists.defaultProps = {\n  playlists: {},\n  loading: true,\n  localSearchForm: {},\n};\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.playlists.loading,\n    playlists: state.playlists.response,\n    localSearchForm: state.form.localSearchForm,\n    token: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getPlaylistsConnect: getPlaylists,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists);\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport PropTypes from 'prop-types';\n\nimport '../stylesheets/playlist.css';\n\nconst Playlist = ({ playlist }) => (\n  <div className=\"playlist text-center\">\n    {playlist.images && playlist.images.length > 0 && (\n      <Image alt={`\"${playlist.name}\" cover image`} src={playlist.images[0].url} rounded />\n    )}\n    <h2 className=\"mt-2 mb-2\">{playlist.name}</h2>\n    <p>\n      <b>{playlist.tracks && playlist.tracks.total}</b>\n      {' faixas - Por '}\n      <b>{playlist.owner && playlist.owner.display_name}</b>\n    </p>\n  </div>\n);\n\nPlaylist.propTypes = {\n  playlist: PropTypes.object.isRequired,\n};\n\nexport default Playlist;\n","import React, { useEffect } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ReduxToastr from 'react-redux-toastr';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Login from './Login';\nimport Navbar from './Navbar';\nimport Filters from './filters/FiltersWrapper';\nimport Playlists from './Playlists';\nimport { clearToken, getToken } from '../store/auth/authActions';\n\nimport '../stylesheets/App.css';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\n\nconst App = ({ clearTokenConnect, getTokenConnect, accessToken }) => {\n  useEffect(() => {\n    getTokenConnect();\n  }, [getTokenConnect]);\n\n  const logout = () => {\n    clearTokenConnect();\n  };\n\n  return (\n    <div className=\"App h-100\">\n      <div className=\"body-bkg\" />\n      <Navbar logout={logout} />\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"top-left\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar\n        closeOnToastrClick\n      />\n      {!accessToken && (\n        <Login />\n      )}\n      {accessToken && (\n        <Container fluid className=\"contentWrapper h-100 text-white\">\n          <Row className=\"align-items-stretch h-100\">\n            <Col style={{ flexGrow: 1 }}>\n              <Playlists />\n            </Col>\n            <Col md=\"5\" lg=\"4\" xl=\"3\" className=\"filtersWrapper d-none d-md-flex\">\n              <Filters idPrefix=\"sideFilterForm\" />\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  clearTokenConnect: PropTypes.func.isRequired,\n  getTokenConnect: PropTypes.func.isRequired,\n  accessToken: PropTypes.string,\n};\n\nApp.defaultProps = {\n  accessToken: null,\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    clearTokenConnect: clearToken,\n    getTokenConnect: getToken,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}