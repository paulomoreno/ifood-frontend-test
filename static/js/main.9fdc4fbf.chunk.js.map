{"version":3,"sources":["store/configureStore.js","helpers/validations.js","components/Loader.js","helpers/auth.js","store/auth/authReducer.js","store/user/userReducer.js","store/filter/filterReducer.js","store/playlist/playlistReducer.js","store/rootReducer.js","store/auth/authActions.js","helpers/api.js","store/playlist/playlistActions.js","store/filter/filterActions.js","components/filters/FiltersForm.js","components/filters/FiltersWrapper.js","components/SearchBarForm.js","store/user/userActions.js","components/Navbar.js","components/filters/FiltersBadges.js","components/Playlists.js","components/Playlist.js","App.js","index.js"],"names":["store","validations","value","isNaN","Number","undefined","min","concat","max","Loader","props","react_default","a","createElement","className","Spinner_default","Object","assign","animation","role","authSettings","endpoint","clientId","redirectUri","process","scopes","goToLogin","window","location","getAuthEndpoint","join","INITIAL_STATE","access_token","loading","user","defs","filters_query","local_filters_query","list","rootReducer","combineReducers","toastr","toastrReducer","auth","state","arguments","length","action","type","objectSpread","payload","filters","playlists","form","formReducer","clearToken","dispatch","localStorage","removeItem","getToken","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","setItem","getItem","baseUrl","apiRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","options","resp","_args","wrap","_context","prev","next","method","url","axios","headers","Authorization","getState","data","params","sent","t0","response","status","confirm","onOk","onCancel","clearSession","abrupt","stop","apply","this","getErrorMessage","error","defaultMsg","message","e","getPlaylists","console","log","then","catch","errorMsg","getFiltersDefs","map","def","validate","values","unshift","key","validation","v","primitiveType","push","inputType","entityType","pattern","findInArrayOfObjects","array","id","filter","obj","updateFilterQuery","filtersForm","filtersDefs","syncErrors","keys","forEach","timestamp","replace","moment","format","renderDatePicker","_React$createElement","input","_ref$meta","meta","touched","react_datepicker_es","selected","onChange","showTimeSelect","timeIntervals","shouldCloseOnSelect","defineProperty","Date","FieldInput","_ref2","label","_as","Form_default","Group","controlId","name","Label","Control","as","isInvalid","opt","i","FiltersForm","_ref3","useEffect","components_Loader","Row","Field","component","reduxForm","connect","bindActionCreators","FiltersWrapper","_useState","useState","_useState2","slicedToArray","open","setOpen","Container_default","fluid","onClick","filters_FiltersForm","InputGroup_default","placeholder","Append","MdSearch_default","fontSize","color","SearchBarForm","inline","clearUser","getUser","token","logout","Navbar_default","fixed","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","components_SearchBarForm","NavDropdown_default","title","images","Image_default","src","roundedCircle","display_name","Item","preventDefault","filters_FiltersWrapper","setIntervalId","localSearchForm","toLocaleString","Badge_default","Playlist","playlist","rounded","REFRESH_PL_MS","filterPlaylists","items","searchStr","toLowerCase","indexOf","clearInterval","setInterval","filteredPlaylists","filters_FiltersBadges","Row_default","Col_default","components_Playlist","initialState","components_Navbar","lib_default","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","Jumbotron_default","Button_default","style","flexGrow","components_Playlists","md","lg","xl","createStore","applyMiddleware","thunk","multi","promise","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"qSAOIA,4RCPSC,EACH,SAAAC,GAAK,OACXA,GAASC,MAAMC,OAAOF,IAAU,wBAAqBG,GAF5CJ,EAID,SAAAK,GAAG,OAAI,SAAAJ,GAAK,OACpBA,GAASA,EAAQI,EAAjB,oBAAAC,OAA2CD,QAAQD,IAL1CJ,EAOD,SAAAO,GAAG,OAAI,SAAAN,GAAK,OACpBA,GAASA,EAAQM,EAAjB,uBAAAD,OAA8CC,QAAQH,sBCU3CI,UAZA,SAACC,GAAD,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACE,EAAAH,EAADI,OAAAC,OAAA,CACEC,UAAU,SACVC,KAAK,UACDT,GAEJC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,uFCbAM,EAAe,CACnBC,SAAU,yCACVC,SAAU,mCACVC,YAAqDC,qDACrDC,OAAQ,IAKGC,EAAY,WACvBC,OAAOC,SAASX,OAAOY,MAMZA,EAAkB,oBAAAtB,OAC1Ba,EAAaC,SADa,eAAAd,OACSa,EAAaE,SADtB,kBAAAf,OAC+Ca,EAAaG,YAD5D,WAAAhB,OACiFa,EAAaK,OAAOK,KAAK,OAD1G,2FChBzBC,GAAgB,CAClBC,aAAc,MCDZD,GAAgB,CAClBE,SAAS,EACTC,KAAM,ICFJH,GAAgB,CAClBE,SAAS,EACTE,KAAM,GACNC,cAAe,GACfC,oBAAqB,ICJnBN,GAAgB,CAClBE,SAAS,EACTK,KAAM,cCeKC,GATKC,YAAgB,CAChCC,OAAQC,UACRC,KJNW,WAAyC,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAzC,IAAAwC,UAAA,GAAAA,UAAA,GAAvBd,GAAegB,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAAxC,EACpD,OAAQ0C,EAAOC,MACX,IAAK,cACD,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBZ,aAAc,OACrC,IAAK,YACD,OAAOhB,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBZ,aAAce,EAAOG,UAC5C,QACI,OAAON,IIAfV,KHNW,WAAyC,IAA/BU,EAA+BC,UAAAC,OAAA,QAAAzC,IAAAwC,UAAA,GAAAA,UAAA,GAAvBd,GAAegB,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAAxC,EACpD,OAAQ0C,EAAOC,MACX,IAAK,OACD,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBV,KAAMa,EAAOG,UACpC,IAAK,eACD,OAAOlC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBX,SAAUW,EAAMX,UACvC,QACI,OAAOW,IGAfO,QFLW,WAAyC,IAA/BP,EAA+BC,UAAAC,OAAA,QAAAzC,IAAAwC,UAAA,GAAAA,UAAA,GAAvBd,GAAegB,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAAxC,EACpD,OAAQ0C,EAAOC,MACX,IAAK,oBACD,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBT,KAAMY,EAAOG,UACpC,IAAK,kBACD,OAAOlC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBX,SAAUW,EAAMX,UACvC,IAAK,uBACD,OAAOjB,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBR,cAAeW,EAAOG,UAC7C,IAAK,6BACD,OAAOlC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBP,oBAAqBU,EAAOG,UACnD,QACI,OAAON,IELfQ,UDRW,WAAyC,IAA/BR,EAA+BC,UAAAC,OAAA,QAAAzC,IAAAwC,UAAA,GAAAA,UAAA,GAAvBd,GAAegB,EAAQF,UAAAC,OAAA,EAAAD,UAAA,QAAAxC,EACpD,OAAQ0C,EAAOC,MACX,IAAK,YACD,OAAOhC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBN,KAAMS,EAAOG,UACpC,IAAK,oBACD,OAAOlC,OAAAiC,EAAA,EAAAjC,CAAA,GAAK4B,EAAZ,CAAmBX,SAAUW,EAAMX,UACvC,QACI,OAAOW,ICEfS,KAAMC,OCZGC,GAAa,WACxB,OAAO,SAAAC,GACLC,aAAaC,WNGe,gBMF5BF,EAAS,CACPR,KAAM,kBAKCW,GAAW,WACtB,OAAO,SAAAH,GACL,IAAMI,EAAoBjC,OAAOC,SAASgC,KNW3CC,UAAU,GACVC,MAAM,KACNC,OAAO,SAAUC,EAASC,GACzB,GAAIA,EAAM,CACR,IAAIC,EAAQD,EAAKH,MAAM,KACvBE,EAAQE,EAAM,IAAMC,mBAAmBD,EAAM,IAE/C,OAAOF,GACN,IMjBDrC,OAAOC,SAASgC,KAAO,GAGnBA,EAAK5B,cACPyB,aAAaW,QNZa,eMYaR,EAAK5B,cAK9CwB,EAAS,CACPR,KAAM,YACNE,QAJmBO,aAAaY,QNfN,oBOCnBC,GAFI,6BAIJC,GAAU,eAAAC,EAAAxD,OAAAyD,EAAA,EAAAzD,CAAA0D,EAAA9D,EAAA+D,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAlC,UAAA,OAAA6B,EAAA9D,EAAAoE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAON,EAAPE,EAAAjC,OAAA,QAAAzC,IAAA0E,EAAA,GAAAA,EAAA,GAAiB,IAE5BK,SAAQP,EAAQO,OAAS,OACjCP,EAAQQ,MAAKR,EAAQQ,IAAMf,IAHRW,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUTG,IAAM,CACjBF,OAAQP,EAAQO,OAChBC,IAAKR,EAAQQ,IACbE,QAAQvE,OAAAiC,EAAA,EAAAjC,CAAA,CACNwE,cAAa,UAAAjF,OAAYP,EAAMyF,WAAW9C,KAAKX,eAC5C6C,EAAQU,SAEbG,KAAMb,EAAQa,KACdC,OAAQd,EAAQc,SAlBI,OAUtBb,EAVsBG,EAAAW,KAAAX,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAqBlBA,EAAAY,GAAMC,UAAsC,MAA1Bb,EAAAY,GAAMC,SAASC,QACnCtD,SAAOuD,QAAQ,+CAAgD,CAC7DC,KAAMvE,EACNwE,SAAUC,KAxBQlB,EAAAY,GAAA,eAAAZ,EAAAmB,OAAA,SA8BjBtB,GA9BiB,yBAAAG,EAAAoB,SAAAzB,EAAA,iBAAH,yBAAAJ,EAAA8B,MAAAC,KAAA1D,YAAA,GAwCV2D,GAAkB,SAACC,EAAOC,GACrC,IACE,OAAOD,EAAMX,SAASJ,KAAKe,MAAME,QAClC,MAAMC,GACL,OAAOF,IAILP,GAAe,WACnBnG,EAAMwD,SAASD,OClDJsD,GAAe,WAC1B,OAAO,SAACrD,EAASiC,GACfqB,QAAQC,IAAI,qBAAsBtB,IAAWtC,QAAQf,eACrDoB,EARK,CACLR,KAAM,sBASNuB,GAAW,CACTa,OAAQ,MACRC,IAAG,GAAA9E,OAAK+D,GAAL,8BACHqB,OAAQF,IAAWtC,QAAQf,gBAC1B4E,KAAK,SAAAlC,GACNtB,EAAS,CACP,CACER,KAAM,YACNE,QAAS4B,EAAKY,KAAKtC,WAlBpB,CACLJ,KAAM,yBAqBHiE,MAAM,SAAAR,GACP,IAAIS,EAAWV,GAAgBC,EAAM,mCACrCK,QAAQL,MAAMS,EAAUT,GACxBhE,SAAOgE,MAAM,QAASS,GACtB1D,EAAS,CACP,CAAER,KAAM,YAAaE,QAAS,IA3B7B,CACLF,KAAM,gDC8CGmE,GAAiB,WAC5B,OAAO,SAAA3D,GACLA,EA5CK,CACLR,KAAM,oBA6CNsC,IAjDe,oDAiDG0B,KAAK,SAAAlC,GACrB,IA1CgB3B,EA0CVhB,EAAO2C,EAAKY,KAAKvC,QAEvBK,EAAS,CACP,CACER,KAAM,oBACNE,SA/CYC,EA+CUhB,EA/CEgB,EAAQiE,IAAI,SAAAC,GAa5C,GAZAA,EAAIrE,KAAQ,QACZqE,EAAIC,SAAW,GAEXD,EAAIE,SACNF,EAAIrE,KAAO,eAEXqE,EAAIE,OAAOC,QAAQ,CACjBC,IAAK,GACLvH,MAAO,MAIPmH,EAAIK,WAAY,CAClB,IAAMC,EAAIN,EAAIK,WAEU,YAApBC,EAAEC,gBACJP,EAAIC,SAASO,KAAK5H,GAClBoH,EAAIS,UAAY,UAGdH,EAAErH,KACJ+G,EAAIC,SAASO,KAAK5H,EAAqB0H,EAAErH,MAEvCqH,EAAEnH,KACJ6G,EAAIC,SAASO,KAAK5H,EAAqB0H,EAAEnH,MAEvCmH,EAAEI,aACJV,EAAIU,WAAaJ,EAAEI,YAEjBJ,EAAEK,UACJX,EAAIW,QAAUL,EAAEK,SAGpB,OAAOX,MAvCA,CACLrE,KAAM,uBAuDHiE,MAAM,SAAAR,GACPhE,SAAOgE,MAAM,QAAS,yBACtBjD,EAAS,CACP,CAAER,KAAM,oBAAqBE,QAAS,IA3DrC,CACLF,KAAM,yBAkEGiF,GAAuB,SAACC,EAAOC,GAAR,OAAeD,EAAME,OAAO,SAAAC,GAAG,OAAIA,EAAIF,KAAOA,KAErEG,GAAoB,WAC/B,OAAO,SAAC9E,EAAUiC,GAChB,IAAM7C,EAAQ6C,IACRpC,EAAOT,EAAMS,KAAKkF,YAClBC,EAAc5F,EAAMO,QAAQhB,KAC5BoF,EAAUlE,EAAKkE,OAAUlE,EAAKkE,OAAS,GAQ7C,GALIlE,EAAKoF,YACPzH,OAAO0H,KAAKrF,EAAKoF,YAAYE,QAAQ,SAAAlB,GAAG,cAAWF,EAAOE,KAIxDF,EAAOqB,UACT,IACE,IAGIZ,EAHQC,GAAqBO,EAAa,aAAa,GAGzCR,QACfa,QAAQ,OAAQ,QAChBA,QAAQ,KAAM,MACjBtB,EAAOqB,UAAYE,KAAOvB,EAAOqB,WAAWG,OAAOf,GAEnD,MAAOpB,GACPE,QAAQL,MAAM,uCAAwCG,UAC/CW,EAAOqB,UAIlB,OAAOpF,EAAS,CACd,CACER,KAAM,uBACNE,QAASqE,GAEXV,SC5FAmC,GAAmB,SAAAxE,GAAyC,IAAAyE,EAAtCC,EAAsC1E,EAAtC0E,MAAsCC,EAAA3E,EAA/B4E,KAA+BD,EAAvBE,QAAuBF,EAAd1C,MAClD,OACE9F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyI,EAAA,GAADL,EAAA,CACEM,SAAUL,EAAMhJ,MAChBsJ,SAAUN,EAAMM,SAChBC,gBAAc,EACdC,cAAe,EACfC,qBAAqB,EACrB7I,UAAU,gBANZE,OAAA4I,EAAA,EAAA5I,CAAAiI,EAAA,qBAAAjI,OAAA4I,EAAA,EAAA5I,CAAAiI,EAAA,aAQa,sBARbjI,OAAA4I,EAAA,EAAA5I,CAAAiI,EAAA,WASYC,EAAMhJ,MAAQ,IAAI2J,KAAKX,EAAMhJ,OAAS,MATlD+I,MAeAa,GAAa,SAAAC,GAA2E,IAAxEb,EAAwEa,EAAxEb,MAAOc,EAAiED,EAAjEC,MAAOZ,EAA0DW,EAA1DX,KAAMpG,EAAoD+G,EAApD/G,KAAM1C,EAA8CyJ,EAA9CzJ,IAAKE,EAAyCuJ,EAAzCvJ,IAAK+G,EAAoCwC,EAApCxC,OAAQO,EAA4BiC,EAA5BjC,UAC5DmC,EAAMjH,EAMV,MALa,iBAATA,IACFiH,EAAM,UACW,cAJyEF,EAAjBhC,aAKzEkC,EAAMjB,IAGNrI,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAKuJ,MAAN,CAAYC,UAAWlB,EAAMmB,MAC3B1J,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAK0J,MAAN,KAAaN,GACbrJ,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAK2J,QAAN,CACEC,GAAIP,EACJI,KAAMnB,EAAMmB,KACZrH,KAAM8E,EACNxH,IAAKA,EACLE,IAAKA,EACLN,MAAOgJ,EAAMhJ,MACbsJ,SAAUN,EAAMM,SAChBiB,UAAWrB,EAAK3C,MAChB2C,KAAMA,EACNF,MAAOA,GAEN3B,GAAUA,EAAOH,IAAI,SAACsD,EAAKC,GAAN,OACpBhK,EAAAC,EAAAC,cAAA,UAAQ4G,IAAG,iBAAAlH,OAAmB2I,EAAMmB,KAAzB,KAAA9J,OAAiCoK,GAAKzK,MAAOwK,EAAIxK,OAAQwK,EAAIL,SAG3EjB,EAAK3C,OACJ9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBsI,EAAK3C,SAMhD,SAASmE,GAATC,GAAkF,IAA3DrC,EAA2DqC,EAA3DrC,YAAarB,EAA8C0D,EAA9C1D,eAAmClF,GAAW4I,EAA9BvC,kBAA8BuC,EAAX5I,SAKrE,OAJA6I,oBAAU,WACR3D,KACC,IAGDxG,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAD,KACGqB,GACCtB,EAAAC,EAAAC,cAACkK,EAAD,MAEDvC,GAAeA,EAAYpB,IAAI,SAACgB,EAAQuC,GAAT,OAC9BhK,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAKoK,IAAN,CAAUvD,IAAG,eAAAlH,OAAiBoK,IAC5BhK,EAAAC,EAAAC,cAACoK,EAAA,EAADjK,OAAAC,OAAA,GACMmH,EADN,CAEE4B,MAAO5B,EAAOiC,KACdA,KAAMjC,EAAOD,GACbL,UAAWM,EAAON,UAClBoD,UAAWpB,UAoBvBc,GAAcO,YAAUnK,OAAA4I,EAAA,EAAA5I,CAAA,CACtBqC,KAAM,cACNmG,SAAU,SAACjC,EAAQ/D,GACjBsD,QAAQC,IAAI,wBAAyBQ,KAHlB,WAKX,SAACA,EAAQ/D,EAAU9C,GAC3B8C,EAAS8E,GAAkBf,MANjB4D,CAQXP,IAEYQ,yBArBf,SAAyBxI,GACvB,MAAO,CACLX,QAASW,EAAMO,QAAQlB,QACvBuG,YAAa5F,EAAMO,QAAQhB,OAI/B,SAA4BqB,GAC1B,OAAO6H,YAAmB,CAAElE,kBAAgBmB,sBAAqB9E,IAapD4H,CAA6CR,IC7F7CU,WAfQ,WAAM,IAAAC,EACHC,oBAAS,GADNC,EAAAzK,OAAA0K,EAAA,EAAA1K,CAAAuK,EAAA,GACpBI,EADoBF,EAAA,GACdG,EADcH,EAAA,GAO3B,OACE9K,EAAAC,EAAAC,cAACgL,EAAAjL,EAAD,CAAWkL,OAAK,GACdnL,EAAAC,EAAAC,cAAA,MAAIkL,QANW,WACjBH,GAASD,KAKP,WACAhL,EAAAC,EAAAC,cAACmL,GAAD,mDCVAlC,WAAa,SAAAtF,GAA4B,IAAzB0E,EAAyB1E,EAAzB0E,MAAcE,GAAW5E,EAAlBwF,MAAkBxF,EAAX4E,MAClC,OACEzI,EAAAC,EAAAC,cAACoL,GAAArL,EAAD,KACED,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAKuJ,MAAN,CACErJ,UAAU,oBACVsJ,UAAWlB,EAAMmB,MAEjB1J,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAK2J,QAANvJ,OAAAC,OAAA,GACMiI,EADN,CAEElG,KAAK,OACLkJ,YAAY,kBACZ9C,KAAMA,MAGVzI,EAAAC,EAAAC,cAACoL,GAAArL,EAAWuL,OAAZ,KACExL,EAAAC,EAAAC,cAACuL,GAAAxL,EAAD,CACEyL,SAAS,OACTC,MAAM,aAOZC,GAAgB,kBAClB5L,EAAAC,EAAAC,cAACqJ,EAAAtJ,EAAD,CAAM4L,QAAM,EAAC1L,UAAU,kCACrBH,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CACEjB,MAAM,OACNK,KAAK,OACLlC,GAAG,OACHL,UAAU,QACVoD,UAAWpB,OAUFyC,GAJfA,GAAgBpB,YAAU,CACxB9H,KAAM,mBADQ8H,CAEboB,ICxCUE,WAAY,WACvB,OAAO,SAAAjJ,GACLA,EACE,CACER,KAAM,OACNE,QAAS,UAKJwJ,GAAU,WACrB,OAAO,SAAAlJ,GACLA,EAjBK,CACLR,KAAM,iBAkBNuB,GAAW,CACTa,OAAQ,MACRC,IAAG,GAAA9E,OAAK+D,GAAL,SACF0C,KAAK,SAAAlC,GACNtB,EAAS,CACP,CACER,KAAM,OACNE,QAAS4B,EAAKY,MA1Bf,CACL1C,KAAM,oBA6BHiE,MAAM,SAAAR,GACP,IAAIS,EAAWV,GAAgBC,EAAM,kCACrCK,QAAQL,MAAMS,EAAUT,GACxBhE,SAAOgE,MAAM,QAASS,GACtB1D,EAAS,CACP,CAAER,KAAM,OAAQE,QAAS,IAnCxB,CACLF,KAAM,sBCkEKoI,yBAZf,SAAyBxI,GACvB,MAAO,CACLX,QAASW,EAAMV,KAAKD,QACpBC,KAAMU,EAAMV,KAAKA,KACjByK,MAAO/J,EAAMD,KAAKX,eAItB,SAA4BwB,GAC1B,OAAO6H,YAAmB,CAAEqB,WAASD,cAAajJ,IAGrC4H,CAxDf,SAAA5G,GAAwD,IAAhCmI,EAAgCnI,EAAhCmI,MAAOzK,EAAyBsC,EAAzBtC,KAAMwK,EAAmBlI,EAAnBkI,QAASE,EAAUpI,EAAVoI,OAW5C,OAVA9B,oBAAU,WACJ6B,GAAOD,KACV,CAACC,IASFhM,EAAAC,EAAAC,cAACgM,EAAAjM,EAAD,CAAQkM,MAAM,MAAMC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACjEvM,EAAAC,EAAAC,cAACgM,EAAAjM,EAAOuM,MAAR,CAAcC,KAAK,SAAnB,aACAzM,EAAAC,EAAAC,cAACgM,EAAAjM,EAAOyM,OAAR,CAAeC,gBAAc,0BAC7B3M,EAAAC,EAAAC,cAACgM,EAAAjM,EAAO2M,SAAR,CAAiBpF,GAAG,wBAAwBrH,UAAU,kCACnD6L,GAASzK,GACRvB,EAAAC,EAAAC,cAAC2M,EAAA5M,EAAD,KACED,EAAAC,EAAAC,cAAC4M,GAAD,MACA9M,EAAAC,EAAAC,cAAC6M,EAAA9M,EAAD,CACE+M,MACEhN,EAAAC,EAAAC,cAAA,YACGqB,EAAK0L,QAAU1L,EAAK0L,OAAO9K,OAAS,GACnCnC,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CAAOE,UAAU,YAAYgN,IAAK5L,EAAK0L,OAAO,GAAGvI,IAAK0I,eAAa,IAErEpN,EAAAC,EAAAC,cAAA,SAAIqB,EAAK8L,eAGb7F,GAAG,2BAEHxH,EAAAC,EAAAC,cAAC6M,EAAA9M,EAAYqN,KAAb,CAAkBlC,QAzBR,SAACnF,GACrBA,EAAEsH,iBACFzB,KACIG,GAAQA,MAsBF,WAEFjM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACsN,GAAD,iCCgBC/C,ICpDXgD,GDoDWhD,qBARf,SAAyBxI,GACvB,MAAO,CACL2F,YAAa3F,EAAMS,KAAKkF,YACxB8F,gBAAiBzL,EAAMS,KAAKgL,gBAC5B7F,YAAa5F,EAAMO,QAAQhB,OAIhBiJ,CArDO,SAAA5G,GAAiD,IAA/C+D,EAA+C/D,EAA/C+D,YAAa8F,EAAkC7J,EAAlC6J,gBAAiB7F,EAAiBhE,EAAjBgE,YAC9CrF,EAAU,GA8BhB,OA5BIoF,GAAeA,EAAYhB,QAE7BvG,OAAO0H,KAAKH,EAAYhB,QAAQoB,QAAQ,SAAClB,GACvC,IAAMY,EAAMJ,GAAqBO,EAAaf,GAAK,GAC/C4C,EAAO5C,EACPvH,EAAQqI,EAAYhB,OAAOE,GAC3B4C,EAAKvH,OAAS,IAAGuH,EAAOA,EAAKA,MAE7BhC,EAAIX,YAA4C,cAA9BW,EAAIX,WAAWK,aACnC7H,EAAQA,EAAMoO,kBAEhBnL,EAAQ0E,KAAK,CACXJ,MACA4C,KAAMpC,GAAqBO,EAAaf,GAAK,GAAG4C,KAChDnK,YAKFmO,GAAmBA,EAAgB9G,QAAU8G,EAAgB9G,OAAO8C,MACpElH,EAAQ0E,KAAK,CACXJ,IAAK,OACL4C,KAAM,OACNnK,MAAOmO,EAAgB9G,OAAO8C,OAMlC1J,EAAAC,EAAAC,cAAA,WACGsC,EAAQiE,IAAI,SAACgB,EAAOuC,GAAR,OACXhK,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,CACI6G,IAAKW,EAAOX,IACZyF,QAAO,QAAA3M,OAAWoK,EAAE,GAAK,SACxBvC,EAAOiC,KAHZ,KAGoBjC,EAAOlI,YE7BpBsO,WAZE,SAAAhK,GAAkB,IAAfiK,EAAejK,EAAfiK,SAElB,OACE9N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACV2N,EAASb,QAAUa,EAASb,OAAO9K,OAAS,GAC3CnC,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CAAOkN,IAAKW,EAASb,OAAO,GAAGvI,IAAKqJ,SAAO,IAE7C/N,EAAAC,EAAAC,cAAA,UAAK4N,EAASpE,SDDlBsE,GAAgB,IAEdC,GAAkB,SAACxL,EAAWiL,GAGlC,GADAvH,QAAQC,IAAI,gBAAiBsH,IACxBjL,IAAcA,EAAUyL,MAAO,MAAO,GAE3C,IAAKR,IACGA,EAAgB9G,SAChB8G,EAAgB9G,OAAO8C,KAC7B,OAAOjH,EAAUyL,MAEnB,IAAMC,EAAYT,EAAgB9G,OAAO8C,KAAK0E,cAE9C,OAAO3L,EAAUyL,MAAMzG,OAAO,SAAAqG,GAC5B,OAAOA,EAASpE,KAAK0E,cAAcC,QAAQF,IAAc,KAuD9C1D,yBAbf,SAAyBxI,GACvB,MAAO,CACLX,QAASW,EAAMQ,UAAUnB,QACzBmB,UAAWR,EAAMQ,UAAUd,KAC3B+L,gBAAiBzL,EAAMS,KAAKgL,gBAC5B1B,MAAO/J,EAAMD,KAAKX,eAItB,SAA4BwB,GAC1B,OAAO6H,YAAmB,CAAExE,iBAAgBrD,IAG/B4H,CAnDf,SAAA5G,GAA0E,IAArDpB,EAAqDoB,EAArDpB,UAAWyD,EAA0CrC,EAA1CqC,aAAc5E,EAA4BuC,EAA5BvC,QAASoM,EAAmB7J,EAAnB6J,gBAGrDvD,oBAAU,WACRjE,IACIuH,IACFa,cAAcb,IAChBA,GAAgBc,YAAY,WAC1BrI,KACA8H,KACD,IAEH,IAAMQ,EAAoBP,GAAgBxL,EAAWiL,GAErD,OACE1N,EAAAC,EAAAC,cAACgL,EAAAjL,EAAD,CAAWkL,OAAK,EAAChL,UAAU,oBACvBH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACuO,GAAD,MACAzO,EAAAC,EAAAC,cAACwO,EAAAzO,EAAD,KACGqB,GACCtB,EAAAC,EAAAC,cAACkK,EAAD,OAEA9I,GAAWkN,GAAqBA,EAAkB/H,IAAI,SAACqH,EAAS9D,GAAV,OACtDhK,EAAAC,EAAAC,cAACyO,EAAA1O,EAAD,CAAK6G,IAAG,oBAAAlH,OAAsBoK,IAC5BhK,EAAAC,EAAAC,cAAC0O,GAAD,CAAUd,SAAUA,SAGrBU,GAAkD,IAA7BA,EAAkBrM,UAAkBb,GAC1DtB,EAAAC,EAAAC,cAACyO,EAAA1O,EAAD,KACED,EAAAC,EAAAC,cAAA,sDEsBCuK,IrB1ESoE,GqB0ETpE,qBAVf,SAAyBxI,GACvB,MAAO,CACLZ,aAAcY,EAAMD,KAAKX,eAI7B,SAA4BwB,GAC1B,OAAO6H,YAAmB,CAAE9H,cAAYI,aAAYH,IAGvC4H,CA7Df,SAAA5G,GAAqD,IAAtCjB,EAAsCiB,EAAtCjB,WAAYI,EAA0Ba,EAA1Bb,SAAU3B,EAAgBwC,EAAhBxC,aASnC,OARA8I,oBAAU,WACRnH,KACC,IAODhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAC4O,GAAD,CAAQ7C,OAPG,WACbrJ,OAOE5C,EAAAC,EAAAC,cAAC6O,EAAA9O,EAAD,CACE+O,QAAS,IACTC,aAAa,EACbC,mBAAiB,EACjBC,SAAS,WACTC,aAAa,SACbC,cAAc,UACdC,aAAW,EACXC,oBAAkB,KAClBlO,GACArB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2EACbH,EAAAC,EAAAC,cAACsP,EAAAvP,EAAD,CAAWsM,QAAQ,OAAOpM,UAAU,gBAClCH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,iHAGAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACuP,EAAAxP,EAAD,CAAQsM,QAAQ,UAAUE,KAAMvL,KAAhC,wBAKPG,GACCrB,EAAAC,EAAAC,cAACgL,EAAAjL,EAAD,CAAWkL,OAAK,EAAChL,UAAU,mCACzBH,EAAAC,EAAAC,cAACwO,EAAAzO,EAAD,CAAKE,UAAU,6BACbH,EAAAC,EAAAC,cAACyO,EAAA1O,EAAD,CAAKyP,MAAO,CAAEC,SAAU,IACtB3P,EAAAC,EAAAC,cAAC0P,GAAD,OAEF5P,EAAAC,EAAAC,cAACyO,EAAA1O,EAAD,CAAK4P,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAI5P,UAAU,mCAClCH,EAAAC,EAAAC,cAACsN,GAAD,YCxDRnO,ItBCkBwP,GsBDK,GtBE3BxP,EAAQ2Q,YAAYpO,GAAaiN,GAAcoB,YAAgBC,KAAOC,KAAMC,OsBA9EC,IAASC,OACPtQ,EAAAC,EAAAC,cAACqQ,EAAA,SAAD,CAAUlR,MAAOA,IACbW,EAAAC,EAAAC,cAACsQ,GAAD,OACSC,SAASC,eAAe","file":"static/js/main.9fdc4fbf.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from \"./rootReducer\";\n\nlet store;\n\nconst configureStore = (initialState) => {\n  store = createStore(rootReducer, initialState, applyMiddleware(thunk, multi,promise));\n  return store;\n}\n\nexport { configureStore, store }","export const validations = {\n  number: value =>\n    value && isNaN(Number(value)) ? 'Must be a number' : undefined,\n\n  minValue: min => value =>\n    value && value < min ? `Must be at least ${min}` : undefined,\n\n  maxValue: max => value =>\n    value && value > max ? `Cannot be more than ${max}` : undefined,\n    \n};","import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\nimport Col from 'react-bootstrap/Col';\n\nimport './loader.css';\n\nconst Loader = (props) => (\n  <div className=\"loaderWrapper\">\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      {...props}\n    >\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loader;","const authSettings = {\n  endpoint: 'https://accounts.spotify.com/authorize',\n  clientId: \"525daf8037874b95b21b21fda6399d0e\",\n  redirectUri: process.env.NODE_ENV === 'production' ? process.env.REACT_APP_PROD_REDIRECT_URL : process.env.REACT_APP_DEV_REDIRECT_URL,\n  scopes: [],\n}\n\nexport const ACCESS_TOKEN_KEY = 'access_token';\n\nexport const goToLogin = () => {\n  window.location.assign(getAuthEndpoint());\n}\n\n/**\n *  Generate the auth endpoint given the auth parameters\n */\nexport const getAuthEndpoint = () => \n  `${authSettings.endpoint}?client_id=${authSettings.clientId}&redirect_uri=${authSettings.redirectUri}&scope=${authSettings.scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n\n/** \n * Given the url hash string, parse it and return\n * an object with all YRL parameters\n*/\nexport const parseUrlHash = urlHash => urlHash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n","const INITIAL_STATE = {\n    access_token: null,\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'CLEAR_TOKEN':\n            return { ...state, access_token: null }\n        case 'GET_TOKEN':\n            return { ...state, access_token: action.payload }\n        default:\n            return state\n    }\n}\n","const INITIAL_STATE = {\n    loading: false,\n    user: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'USER':\n            return { ...state, user: action.payload }\n        case 'LOADING_USER':\n            return { ...state, loading: !state.loading }\n        default:\n            return state\n    }\n}\n","const INITIAL_STATE = {\n    loading: false,\n    defs: [],\n    filters_query: {},\n    local_filters_query: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'LOAD_FILTERS_DEFS':\n            return { ...state, defs: action.payload }\n        case 'LOADING_FILTERS':\n            return { ...state, loading: !state.loading }\n        case 'UPDATE_FILTERS_QUERY':\n            return { ...state, filters_query: action.payload}\n        case 'UPDATE_LOCAL_FILTERS_QUERY':\n            return { ...state, local_filters_query: action.payload}\n        default:\n            return state\n    }\n}\n","const INITIAL_STATE = {\n    loading: false,\n    list: []\n}\n\nexport default function (state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case 'PLAYLISTS':\n            return { ...state, list: action.payload }\n        case 'LOADING_PLAYLISTS':\n            return { ...state, loading: !state.loading }\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport auth from './auth/authReducer';\nimport user from './user/userReducer';\nimport filters from './filter/filterReducer';\nimport playlists from './playlist/playlistReducer';\nimport { reducer as formReducer } from 'redux-form'\n\nconst rootReducer = combineReducers({\n    toastr: toastrReducer,\n    auth,\n    user,\n    filters,\n    playlists,\n    form: formReducer,\n});\n\nexport default rootReducer;\n","import {ACCESS_TOKEN_KEY, parseUrlHash} from '../../helpers/auth'\n\nexport const clearToken = () => {\n  return dispatch => {\n    localStorage.removeItem(ACCESS_TOKEN_KEY);\n    dispatch({\n      type: 'CLEAR_TOKEN'\n    });\n  }\n}\n\nexport const getToken = () => {\n  return dispatch => {\n    const hash = parseUrlHash(window.location.hash);\n\n    window.location.hash = \"\";\n\n    // Tries to save the access_token\n    if (hash.access_token) {\n      localStorage.setItem(ACCESS_TOKEN_KEY, hash.access_token);\n    }\n\n    const currentToken = localStorage.getItem(ACCESS_TOKEN_KEY);\n\n    dispatch({\n      type: 'GET_TOKEN',\n      payload: currentToken\n    });\n  }\n}\n","import axios from 'axios';\nimport { goToLogin } from './auth';\nimport { toastr } from 'react-redux-toastr';\nimport { store } from '../store/configureStore';\nimport { clearToken } from '../store/auth/authActions';\n\nconst _baseUrl = 'https://api.spotify.com/v1';\n\nexport const baseUrl = _baseUrl;\n\nexport const apiRequest = async (options = {}) => {\n\n  if (!options.method) options.method = 'get';\n  if (!options.url) options.url = baseUrl;\n\n  let resp;\n\n  // await new Promise(resolve=>setTimeout(resolve,5000));\n\n  try {\n    resp = await axios({\n      method: options.method,\n      url: options.url,\n      headers: {\n        Authorization: `Bearer ${store.getState().auth.access_token}`,\n        ...options.headers\n      },\n      data: options.data,\n      params: options.params,\n    });\n  } catch (error) {\n    if (error.response && error.response.status === 401){\n      toastr.confirm('Session expired. Do you want to login again?', {\n        onOk: goToLogin,\n        onCancel: clearSession,\n      });\n    }\n    throw error;\n  }\n\n  return resp;\n}\n\n/**\n * Given an API error, and a default error message, \n * tries to get the response error message. If not available\n * returns the default message.\n * @param {objet} error \n * @param {string} defaultMsg \n */\nexport const getErrorMessage = (error, defaultMsg) => {\n  try{\n    return error.response.data.error.message;\n  }catch(e){\n    return defaultMsg;\n  }\n}\n\nconst clearSession = () => {\n  store.dispatch(clearToken());\n}\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_PLAYLISTS'\n  }\n}\n\nexport const getPlaylists = () => {\n  return (dispatch,getState) => {\n    console.log('will get playlists', getState().filters.filters_query)\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/browse/featured-playlists`,\n      params: getState().filters.filters_query\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'PLAYLISTS',\n          payload: resp.data.playlists\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Error loading list of playlists');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'PLAYLISTS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n","import { toastr } from 'react-redux-toastr';\nimport axios from 'axios';\nimport { validations } from '../../helpers/validations';\nimport { getPlaylists } from '../playlist/playlistActions';\nimport moment from 'moment';\n\nconst FILTER_URL = 'https://www.mocky.io/v2/5a25fade2e0000213aa90776';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_FILTERS'\n  }\n}\n\nconst parseFilters = (filters) => filters.map(def => {\n  def.type =  'input';\n  def.validate = [];\n\n  if (def.values){\n    def.type = 'select-multi';\n    // Add default empty selected option\n    def.values.unshift({\n      key: '',\n      value: '',\n    });\n  }\n\n  if (def.validation) {\n    const v = def.validation;\n\n    if (v.primitiveType === 'INTEGER') {\n      def.validate.push(validations.number);\n      def.inputType = 'number';\n    }\n\n    if (v.min)\n      def.validate.push(validations.minValue(v.min));\n\n    if (v.max)\n      def.validate.push(validations.maxValue(v.max));\n\n    if (v.entityType)\n      def.entityType = v.entityType;\n\n    if (v.pattern)\n      def.pattern = v.pattern;\n\n  }\n  return def;\n});\n\nexport const getFiltersDefs = () => {\n  return dispatch => {\n    dispatch(loading());\n\n    axios(FILTER_URL).then(resp => {\n      const defs = resp.data.filters;\n\n      dispatch([\n        {\n          type: 'LOAD_FILTERS_DEFS',\n          payload: parseFilters(defs)\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      toastr.error('Error', 'Error loading filters')\n      dispatch([\n        { type: 'LOAD_FILTERS_DEFS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n\n\nexport const findInArrayOfObjects = (array, id) => array.filter(obj => obj.id === id);\n\nexport const updateFilterQuery = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const form = state.form.filtersForm;\n    const filtersDefs = state.filters.defs;\n    const values = (form.values) ? form.values : {};\n\n    // Remove all inputs with errors\n    if (form.syncErrors) {\n      Object.keys(form.syncErrors).forEach(key => delete values[key]);\n    }\n\n    // Parse timestamp\n    if (values.timestamp) {\n      try {\n        const def = findInArrayOfObjects(filtersDefs, 'timestamp')[0];\n        // The pattern used on our filters definitions is different than the\n        // pattern used by moment\n        let pattern = def.pattern\n          .replace('yyyy', 'YYYY')\n          .replace('dd', 'DD');\n        values.timestamp = moment(values.timestamp).format(pattern);\n        // Error parsing filter - delete and log\n      } catch (e) {\n        console.error('Error while parsing timestamp value.', e);\n        delete values.timestamp;\n      }\n    }\n\n    return dispatch([\n      {\n        type: 'UPDATE_FILTERS_QUERY',\n        payload: values,\n      },\n      getPlaylists()\n    ]);\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport FormControl from 'react-bootstrap/FormControl';\nimport { Field } from 'redux-form'\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { validations } from '../../helpers/validations';\n\nimport Loader from '../Loader';\n\nimport { getFiltersDefs, updateFilterQuery } from '../../store/filter/filterActions';\n\nconst renderDatePicker = ({ input, meta: { touched, error } }) => {\n  return (\n    <div>\n      <DatePicker\n        selected={input.value}\n        onChange={input.onChange}\n        showTimeSelect\n        timeIntervals={1}\n        shouldCloseOnSelect={false}\n        className=\"form-control\"\n        showTimeSelect\n        dateFormat=\"dd/MM/yyyy h:mm aa\"\n        selected={input.value ? new Date(input.value) : null}\n      />\n    </div>\n  )\n};\n\nconst FieldInput = ({ input, label, meta, type, min, max, values, inputType, entityType }) => {\n  let _as = type;\n  if (type === 'select-multi')\n    _as = 'select';\n  if (entityType === 'DATE_TIME')\n    _as = renderDatePicker;\n\n  return (\n    <Form.Group controlId={input.name}>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        as={_as}\n        name={input.name}\n        type={inputType}\n        min={min}\n        max={max}\n        value={input.value}\n        onChange={input.onChange}\n        isInvalid={meta.error}\n        meta={meta}\n        input={input}\n      >\n        {values && values.map((opt, i) => (\n          <option key={`filter_option_${input.name}_${i}`} value={opt.value}>{opt.name}</option>\n        ))}\n      </Form.Control>\n      {meta.error && (\n        <div className=\"invalid-feedback\">{meta.error}</div>\n      )}\n    </Form.Group>\n  )\n}\n\nfunction FiltersForm({ filtersDefs, getFiltersDefs, updateFilterQuery, loading }) {\n  useEffect(() => {\n    getFiltersDefs();\n  }, []);\n\n  return (\n    <Form>\n      {loading && (\n        <Loader />\n      )}\n      {filtersDefs && filtersDefs.map((filter, i) => (\n        <Form.Row key={`filters_api_${i}`}>\n          <Field\n            {...filter}\n            label={filter.name}\n            name={filter.id}\n            inputType={filter.inputType}\n            component={FieldInput}\n          >\n          </Field>\n        </Form.Row>\n      ))}\n    </Form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.filters.loading,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getFiltersDefs, updateFilterQuery }, dispatch)\n}\n\nFiltersForm = reduxForm({\n  form: 'filtersForm',\n  onChange: (values, dispatch) => {\n    console.log('form changed values: ', values);\n  },\n  onChange: (values, dispatch, props) => {\n    dispatch(updateFilterQuery(values));\n  }\n})(FiltersForm);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersForm)\n\n","\nimport React, { useState } from \"react\";\n\nimport Container from 'react-bootstrap/Container';\nimport FiltersForm from './FiltersForm';\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\n\nimport './filtersWrapper.css';\n\nconst FiltersWrapper = () => {\n  const [open, setOpen] = useState(true);\n\n  const toggleOpen = () => {\n    setOpen(!open);\n  }\n\n  return (\n    <Container fluid>\n      <h1 onClick={toggleOpen}>Filters</h1>\n      <FiltersForm />\n    </Container>\n  )\n};\n\nexport default FiltersWrapper;","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport MdSearch from 'react-ionicons/lib/MdSearch';\n\nimport { Field } from 'redux-form'\nimport { reduxForm } from 'redux-form';\n\nimport './searchBarButton.css';\n\nconst FieldInput = ({ input, label, meta }) => {\n  return (\n    <InputGroup>\n      <Form.Group\n        className=\"customSearchInput\"\n        controlId={input.name}\n      >\n        <Form.Control\n          {...input}\n          type=\"text\"\n          placeholder=\"Buscar por nome\"\n          meta={meta}\n        />\n      </Form.Group>\n      <InputGroup.Append>\n        <MdSearch\n          fontSize=\"2rem\"\n          color=\"#fff\"\n        />\n      </InputGroup.Append>\n    </InputGroup>\n  )\n}\n\nlet SearchBarForm = () => (\n  <Form inline className=\"justify-content-center mr-md-5\">\n    <Field\n      label=\"Nome\"\n      name=\"name\"\n      id=\"name\"\n      inputType=\"input\"\n      component={FieldInput}\n    />\n  </Form>\n);\n\n\nSearchBarForm = reduxForm({\n  form: 'localSearchForm'\n})(SearchBarForm);\n\nexport default SearchBarForm;\n\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_USER'\n  }\n}\n\nexport const clearUser = () => {\n  return dispatch => {\n    dispatch(\n      {\n        type: 'USER',\n        payload: null\n      });\n  }\n}\n\nexport const getUser = () => {\n  return dispatch => {\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/me`,\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'USER',\n          payload: resp.data\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Error loading user information');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'USER', payload: {} },\n        loading()\n      ])\n    })\n  }\n}\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport Filters from './filters/FiltersWrapper';\nimport SearchBarForm from \"./SearchBarForm\";\n\nimport './navbar.css';\n\nimport { getUser, clearUser } from '../store/user/userActions';\n\nfunction CustomNavbar({ token, user, getUser, logout }) {\n  useEffect(() => {\n    if (token) getUser();\n  }, [token]);\n\n  const logoutOnClick = (e) => {\n    e.preventDefault();\n    clearUser();\n    if (logout) logout();\n  }\n\n  return (\n    <Navbar fixed=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">Spotifood</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end text-white\">\n        {token && user && (\n          <Nav>\n            <SearchBarForm />\n            <NavDropdown\n              title={\n                <span>\n                  {user.images && user.images.length > 0 && (\n                    <Image className=\"userImage\" src={user.images[0].url} roundedCircle />\n                  )}\n                  <b>{user.display_name}</b>\n                </span>\n              }\n              id=\"collasible-nav-dropdown\"\n            >\n              <NavDropdown.Item onClick={logoutOnClick}>Logout</NavDropdown.Item>\n            </NavDropdown>\n            <div className=\"filtersWrapperNav\">\n              <Filters />\n            </div>\n          </Nav>\n\n        )}\n      </Navbar.Collapse>\n    </Navbar >\n  );\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.user.loading,\n    user: state.user.user,\n    token: state.auth.access_token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getUser, clearUser }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomNavbar)\n\n","\nimport React from \"react\";\n\nimport Badge from 'react-bootstrap/Badge';\nimport { connect } from 'react-redux';\n\nimport { findInArrayOfObjects } from '../../store/filter/filterActions';\n\n\nimport './filtersWrapper.css';\n\nconst FiltersBadges = ({filtersForm, localSearchForm, filtersDefs}) => {\n  const filters = [];\n\n  if (filtersForm && filtersForm.values){\n\n    Object.keys(filtersForm.values).forEach((key)=>{\n      const obj = findInArrayOfObjects(filtersDefs, key)[0];\n      let name = key;\n      let value = filtersForm.values[key];\n      if (name.length > 0) name = name.name;\n\n      if (obj.validation && obj.validation.entityType === 'DATE_TIME')\n        value = value.toLocaleString();\n\n      filters.push({\n        key,\n        name: findInArrayOfObjects(filtersDefs, key)[0].name,\n        value,\n      })\n    })\n  }\n\n  if (localSearchForm && localSearchForm.values && localSearchForm.values.name){\n      filters.push({\n        key: 'name',\n        name: 'Nome',\n        value: localSearchForm.values.name,\n      })\n  }\n\n\n  return (\n    <div>\n      {filters.map((filter,i)=>(\n        <Badge \n            key={filter.key} \n            variant={`info ${(i>0 && 'ml-4')}`}>\n            {filter.name}: {filter.value}\n        </Badge>\n      ))}\n    </div>\n  );\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    filtersForm: state.form.filtersForm,\n    localSearchForm: state.form.localSearchForm,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nexport default connect(mapStateToProps)(FiltersBadges)","import React, { useEffect } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Loader from './Loader';\n\nimport {getPlaylists} from '../store/playlist/playlistActions';\nimport FiltersBadges from './filters/FiltersBadges';\nimport Playlist from \"./Playlist\";\n\nlet setIntervalId;\nlet REFRESH_PL_MS = 30 * 1000;\n\nconst filterPlaylists = (playlists, localSearchForm) => {\n\n  console.log('localFilters:', localSearchForm)\n  if (!playlists || !playlists.items) return [];\n\n  if (!localSearchForm \n      || !localSearchForm.values \n      || !localSearchForm.values.name)\n    return playlists.items;\n\n  const searchStr = localSearchForm.values.name.toLowerCase();\n\n  return playlists.items.filter(playlist=>{\n    return playlist.name.toLowerCase().indexOf(searchStr) > -1;\n  });\n}\n\nfunction Playlists({ playlists, getPlaylists, loading, localSearchForm }) {\n  // When the component starts, load the playlits\n  // and set the playlist to be refreshed\n  useEffect(() => {\n    getPlaylists();\n    if (setIntervalId)\n      clearInterval(setIntervalId);\n    setIntervalId = setInterval(()=>{\n      getPlaylists()\n    },REFRESH_PL_MS);\n  }, []);\n\n  const filteredPlaylists = filterPlaylists(playlists, localSearchForm);\n\n  return (\n    <Container fluid className=\"playlistsWrapper\">\n        <h1>Playlists </h1>\n        <FiltersBadges/>\n        <Row>\n          {loading && (\n            <Loader/>\n          )}\n          {!loading && filteredPlaylists && filteredPlaylists.map((playlist,i) => (\n            <Col key={`playlist_wrapper_${i}`}>\n              <Playlist playlist={playlist}/>\n            </Col>\n          ))}\n          {(!filteredPlaylists || filteredPlaylists.length === 0) && !loading && (\n            <Col>\n              <p>No playlists available</p>\n            </Col>\n          )}\n        </Row>\n    </Container>\n\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.playlists.loading,\n    playlists: state.playlists.list,\n    localSearchForm: state.form.localSearchForm,\n    token: state.auth.access_token,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getPlaylists }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists)\n\n","import React, { useEffect } from \"react\";\nimport Image from 'react-bootstrap/Image';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport './playlist.css';\n\nconst Playlist = ({ playlist }) => {\n  // console.log(playlist);\n  return (\n    <div className=\"playlist\">\n        {playlist.images && playlist.images.length > 0 && (\n          <Image src={playlist.images[0].url} rounded />\n        )}\n        <h3>{playlist.name}</h3>\n    </div>\n  );\n}\n\nexport default Playlist\n\n","import React, { useState, useEffect } from \"react\";\n\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from './components/Navbar';\nimport Filters from './components/filters/FiltersWrapper';\nimport Playlists from './components/Playlists';\nimport ReduxToastr from 'react-redux-toastr'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n\nimport './App.css';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\n\nimport { getAuthEndpoint } from './helpers/auth';\nimport { clearToken, getToken } from './store/auth/authActions';\n\nfunction App({ clearToken, getToken, access_token }) {\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  const logout = () => {\n    clearToken();\n  }\n\n  return (\n    <div className=\"App h-100\">\n      <div className=\"body-bkg\" />\n      <Navbar logout={logout}/>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"top-left\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar\n        closeOnToastrClick />\n      {!access_token && (\n        <div className=\"contentLogin h-100 align-items-center justify-content-center text-white\">\n          <Jumbotron variant=\"dark\" className=\"loginWrapper\">\n            <h1>Bem Vindo ao Spotifood</h1>\n            <p>\n              Faça login usando sua conta do Spotify e aproveite uma nova maneira de visualizar suas playlists!\n            </p>\n            <p>\n              <Button variant=\"success\" href={getAuthEndpoint()}>Login com Spotify</Button>\n            </p>\n          </Jumbotron>\n        </div>\n      )}\n      {access_token && (\n        <Container fluid className=\"contentWrapper h-100 text-white\">\n          <Row className=\"align-items-stretch h-100\">\n            <Col style={{ flexGrow: 1 }}>\n              <Playlists />\n            </Col>\n            <Col md=\"5\" lg=\"4\" xl=\"3\" className=\"filtersWrapper d-none d-md-flex\">\n              <Filters />\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    access_token: state.auth.access_token,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ clearToken, getToken }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}