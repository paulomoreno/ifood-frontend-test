{"version":3,"sources":["store/configureStore.js","components/Loader.js","helpers/validations.js","helpers/auth.js","store/auth/authReducer.js","store/user/userReducer.js","store/filter/filterReducer.js","store/playlist/playlistReducer.js","store/rootReducer.js","store/auth/authActions.js","helpers/api.js","store/playlist/playlistActions.js","store/filter/filterActions.js","components/filters/FiltersForm.js","components/filters/FiltersWrapper.js","components/SearchBarForm.js","store/user/userActions.js","components/Navbar.js","components/filters/FiltersBadges.js","components/Playlists.js","components/Playlist.js","components/App.js","index.js"],"names":["store","Loader","props","react_default","a","createElement","className","Spinner_default","Object","assign","animation","role","validations","value","isNaN","Number","undefined","min","concat","max","authSettings","endpoint","clientId","redirectUri","process","scopes","goToLogin","window","location","getAuthEndpoint","join","INITIAL_STATE","access_token","loading","user","defs","filters_query","local_filters_query","list","rootReducer","combineReducers","toastr","toastrReducer","auth","state","arguments","length","action","type","objectSpread","payload","filters","playlists","form","formReducer","clearToken","dispatch","localStorage","removeItem","getToken","hash","substring","split","reduce","initial","item","parts","decodeURIComponent","setItem","getItem","baseUrl","apiRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","options","resp","_args","wrap","_context","prev","next","method","url","axios","headers","Authorization","getState","data","params","sent","t0","response","status","confirm","onOk","onCancel","clearSession","abrupt","stop","apply","this","getErrorMessage","error","defaultMsg","message","e","getPlaylists","then","catch","errorMsg","console","getFiltersDefs","map","def","validate","values","unshift","key","validation","v","primitiveType","push","inputType","entityType","pattern","findInArrayOfObjects","array","id","filter","obj","updateFilterQuery","filtersForm","filtersDefs","syncErrors","keys","forEach","timestamp","replace","moment","format","renderDatePicker","input","es","onChange","showTimeSelect","timeIntervals","shouldCloseOnSelect","dateFormat","selected","Date","FieldInput","_ref2","label","meta","idPrefix","_as","name","Form_default","Group","controlId","Label","Control","as","isInvalid","opt","i","FiltersForm","_ref3","useEffect","components_Loader","Row","Field","component","reduxForm","connect","bindActionCreators","FiltersWrapper","titleId","Container_default","fluid","aria-labelledby","filters_FiltersForm","InputGroup_default","Append","MdSearch_default","fontSize","color","SearchBarForm","inline","clearUser","getUser","token","logout","Navbar_default","fixed","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav_default","components_SearchBarForm","NavDropdown_default","title","images","Image_default","alt","src","roundedCircle","display_name","Item","onClick","preventDefault","filters_FiltersWrapper","setIntervalId","localSearchForm","toLocaleString","Badge_default","Playlist","playlist","log","rounded","class","tracks","total","owner","REFRESH_PL_MS","filterPlaylists","items","searchStr","toLowerCase","indexOf","clearInterval","setInterval","filteredPlaylists","filters_FiltersBadges","Row_default","Col_default","components_Playlist","initialState","components_Navbar","lib_default","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","Jumbotron_default","Button_default","href","style","flexGrow","components_Playlists","md","lg","xl","createStore","applyMiddleware","thunk","multi","promise","ReactDOM","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.77c02c10.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from \"./rootReducer\";\n\nlet store;\n\nconst configureStore = (initialState) => {\n  store = createStore(rootReducer, initialState, applyMiddleware(thunk, multi,promise));\n  return store;\n}\n\nexport { configureStore, store }","import React from \"react\";\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport '../stylesheets/loader.css';\n\nconst Loader = (props) => (\n  <div className=\"loaderWrapper\">\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      {...props}\n    >\n      <span className=\"sr-only\">Carregando...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loader;","export const validations = {\n  number: value =>\n    value && isNaN(Number(value)) ? 'Deve ser um número' : undefined,\n\n  minValue: min => value =>\n    value && value < min ? `Deve ser pelo menos ${min}` : undefined,\n\n  maxValue: max => value =>\n    value && value > max ? `Não pode ser maior que ${max}` : undefined,\n};","const authSettings = {\n  endpoint: 'https://accounts.spotify.com/authorize',\n  clientId: \"525daf8037874b95b21b21fda6399d0e\",\n  redirectUri: process.env.NODE_ENV === 'production' ? process.env.REACT_APP_PROD_REDIRECT_URL : process.env.REACT_APP_DEV_REDIRECT_URL,\n  scopes: [],\n}\n\nexport const ACCESS_TOKEN_KEY = 'access_token';\n\nexport const goToLogin = () => {\n  window.location.assign(getAuthEndpoint());\n}\n\n/**\n *  Generate the auth endpoint given the auth parameters\n */\nexport const getAuthEndpoint = () => \n  `${authSettings.endpoint}?client_id=${authSettings.clientId}&redirect_uri=${authSettings.redirectUri}&scope=${authSettings.scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n\n/** \n * Given the url hash string, parse it and return\n * an object with all YRL parameters\n*/\nexport const parseUrlHash = urlHash => urlHash\n  .substring(1)\n  .split(\"&\")\n  .reduce(function (initial, item) {\n    if (item) {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return initial;\n  }, {});\n","const INITIAL_STATE = {\n  access_token: null,\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'CLEAR_TOKEN':\n      return { ...state, access_token: null }\n    case 'GET_TOKEN':\n      return { ...state, access_token: action.payload }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  user: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USER':\n      return { ...state, user: action.payload }\n    case 'LOADING_USER':\n      return { ...state, loading: !state.loading }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  defs: [],\n  filters_query: {},\n  local_filters_query: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOAD_FILTERS_DEFS':\n      return { ...state, defs: action.payload }\n    case 'LOADING_FILTERS':\n      return { ...state, loading: !state.loading }\n    case 'UPDATE_FILTERS_QUERY':\n      return { ...state, filters_query: action.payload }\n    case 'UPDATE_LOCAL_FILTERS_QUERY':\n      return { ...state, local_filters_query: action.payload }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  list: []\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'PLAYLISTS':\n      return { ...state, list: action.payload }\n    case 'LOADING_PLAYLISTS':\n      return { ...state, loading: !state.loading }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport auth from './auth/authReducer';\nimport user from './user/userReducer';\nimport filters from './filter/filterReducer';\nimport playlists from './playlist/playlistReducer';\nimport { reducer as formReducer } from 'redux-form'\n\nconst rootReducer = combineReducers({\n    toastr: toastrReducer,\n    auth,\n    user,\n    filters,\n    playlists,\n    form: formReducer,\n});\n\nexport default rootReducer;\n","import {ACCESS_TOKEN_KEY, parseUrlHash} from '../../helpers/auth'\n\nexport const clearToken = () => {\n  return dispatch => {\n    localStorage.removeItem(ACCESS_TOKEN_KEY);\n    dispatch({\n      type: 'CLEAR_TOKEN'\n    });\n  }\n}\n\nexport const getToken = () => {\n  return dispatch => {\n    const hash = parseUrlHash(window.location.hash);\n\n    window.location.hash = \"\";\n\n    if (hash.access_token) {\n      localStorage.setItem(ACCESS_TOKEN_KEY, hash.access_token);\n    }\n\n    const currentToken = localStorage.getItem(ACCESS_TOKEN_KEY);\n\n    dispatch({\n      type: 'GET_TOKEN',\n      payload: currentToken\n    });\n  }\n}\n","import axios from 'axios';\nimport { goToLogin } from './auth';\nimport { toastr } from 'react-redux-toastr';\nimport { store } from '../store/configureStore';\nimport { clearToken } from '../store/auth/authActions';\n\nconst _baseUrl = 'https://api.spotify.com/v1';\n\nexport const baseUrl = _baseUrl;\n\nexport const apiRequest = async (options = {}) => {\n\n  if (!options.method) options.method = 'get';\n  if (!options.url) options.url = baseUrl;\n\n  let resp;\n\n  try {\n    resp = await axios({\n      method: options.method,\n      url: options.url,\n      headers: {\n        Authorization: `Bearer ${store.getState().auth.access_token}`,\n        ...options.headers\n      },\n      data: options.data,\n      params: options.params,\n    });\n  } catch (error) {\n    if (error.response && error.response.status === 401){\n      toastr.confirm('Sessão expirada. Deseja entrar novamente?', {\n        onOk: goToLogin,\n        onCancel: clearSession,\n      });\n    }\n    throw error;\n  }\n\n  return resp;\n}\n\n/**\n * Given an API error, and a default error message, \n * tries to get the response error message. If not available\n * returns the default message.\n * @param {objet} error \n * @param {string} defaultMsg \n */\nexport const getErrorMessage = (error, defaultMsg) => {\n  try{\n    return error.response.data.error.message;\n  }catch(e){\n    return defaultMsg;\n  }\n}\n\nconst clearSession = () => {\n  store.dispatch(clearToken());\n}\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_PLAYLISTS'\n  }\n}\n\nexport const getPlaylists = () => {\n  return (dispatch,getState) => {\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/browse/featured-playlists`,\n      params: getState().filters.filters_query\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'PLAYLISTS',\n          payload: resp.data.playlists\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Erro ao carregar lista de playlists');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'PLAYLISTS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n","import { toastr } from 'react-redux-toastr';\nimport axios from 'axios';\nimport { validations } from '../../helpers/validations';\nimport { getPlaylists } from '../playlist/playlistActions';\nimport moment from 'moment';\n\nconst FILTER_URL = 'https://www.mocky.io/v2/5a25fade2e0000213aa90776';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_FILTERS'\n  }\n}\n\nconst parseFilters = (filters) => filters.map(def => {\n  def.type =  'input';\n  def.validate = [];\n\n  if (def.values){\n    def.type = 'select-multi';\n    // Add default empty option on all selects\n    def.values.unshift({\n      key: '',\n      value: '',\n    });\n  }\n\n  if (def.validation) {\n    const v = def.validation;\n\n    if (v.primitiveType === 'INTEGER') {\n      def.validate.push(validations.number);\n      def.inputType = 'number';\n    }\n\n    if (v.min)\n      def.validate.push(validations.minValue(v.min));\n\n    if (v.max)\n      def.validate.push(validations.maxValue(v.max));\n\n    if (v.entityType)\n      def.entityType = v.entityType;\n\n    if (v.pattern)\n      def.pattern = v.pattern;\n\n  }\n  return def;\n});\n\nexport const getFiltersDefs = () => {\n  return dispatch => {\n    dispatch(loading());\n\n    axios(FILTER_URL).then(resp => {\n      const defs = resp.data.filters;\n\n      dispatch([\n        {\n          type: 'LOAD_FILTERS_DEFS',\n          payload: parseFilters(defs)\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      toastr.error('Error', 'Erro ao carregar filtros')\n      dispatch([\n        { type: 'LOAD_FILTERS_DEFS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n\n\nexport const findInArrayOfObjects = (array, id) => array.filter(obj => obj.id === id);\n\nexport const updateFilterQuery = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const form = state.form.filtersForm;\n    const filtersDefs = state.filters.defs;\n    const values = (form.values) ? form.values : {};\n\n    // Remove all inputs with errors\n    if (form.syncErrors) {\n      Object.keys(form.syncErrors).forEach(key => delete values[key]);\n    }\n\n    // Parse timestamp\n    if (values.timestamp) {\n      try {\n        const def = findInArrayOfObjects(filtersDefs, 'timestamp')[0];\n        // The pattern used on our filters definitions is different than the\n        // pattern used by moment\n        let pattern = def.pattern\n          .replace('yyyy', 'YYYY')\n          .replace('dd', 'DD');\n        values.timestamp = moment(values.timestamp).format(pattern);\n        // Error parsing filter - delete and log\n      } catch (e) {\n        console.error('Error while parsing timestamp value.', e);\n        delete values.timestamp;\n      }\n    }\n\n    return dispatch([\n      {\n        type: 'UPDATE_FILTERS_QUERY',\n        payload: values,\n      },\n      getPlaylists()\n    ]);\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Loader from '../Loader';\nimport DatePicker from 'react-datepicker';\nimport { Field } from 'redux-form'\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getFiltersDefs, updateFilterQuery } from '../../store/filter/filterActions';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst renderDatePicker = ({ input }) => {\n  return (\n    <div>\n      <DatePicker\n        id={input.id}\n        onChange={input.onChange}\n        showTimeSelect\n        timeIntervals={1}\n        shouldCloseOnSelect={false}\n        className=\"form-control\"\n        dateFormat=\"dd/MM/yyyy h:mm aa\"\n        selected={input.value ? new Date(input.value) : null}\n      />\n    </div>\n  )\n};\n\nconst FieldInput = ({ input, label, meta, type, min, max, values, inputType, entityType, idPrefix }) => {\n  let _as = type;\n  if (type === 'select-multi')\n    _as = 'select';\n  if (entityType === 'DATE_TIME')\n    _as = renderDatePicker;\n\n  input.id = `${idPrefix}-${input.name}`;\n\n  return (\n    <Form.Group controlId={input.id}>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        as={_as}\n        name={input.name}\n        type={inputType}\n        min={min}\n        max={max}\n        value={input.value}\n        onChange={input.onChange}\n        isInvalid={meta.error}\n        meta={meta}\n        input={input}\n      >\n        {values && values.map((opt, i) => (\n          <option key={`filter_option_${input.name}_${i}`} value={opt.value}>{opt.name}</option>\n        ))}\n      </Form.Control>\n      {meta.error && (\n        <div className=\"invalid-feedback\">{meta.error}</div>\n      )}\n    </Form.Group>\n  )\n}\n\nlet FiltersForm = ({ filtersDefs, getFiltersDefs, updateFilterQuery, loading, idPrefix }) => {\n  useEffect(() => {\n    getFiltersDefs();\n  }, [getFiltersDefs]);\n\n  return (\n    <Form>\n      {loading && (\n        <Loader />\n      )}\n      {filtersDefs && filtersDefs.map((filter, i) => (\n        <Form.Row key={`filters_api_${i}`}>\n          <Field\n            {...filter}\n            label={filter.name}\n            name={filter.id}\n            idPrefix={idPrefix}\n            inputType={filter.inputType}\n            component={FieldInput}\n          >\n          </Field>\n        </Form.Row>\n      ))}\n    </Form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.filters.loading,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getFiltersDefs, updateFilterQuery }, dispatch)\n}\n\nFiltersForm = reduxForm({\n  form: 'filtersForm',\n  onChange: (values, dispatch, props) => {\n    dispatch(updateFilterQuery(values));\n  }\n})(FiltersForm);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersForm)","\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport FiltersForm from './FiltersForm';\n\nimport '../../stylesheets/filtersWrapper.css';\n\nconst FiltersWrapper = ({idPrefix}) => {\n  const titleId= `${idPrefix}-title`;\n  return (\n    <Container fluid role=\"form\" aria-labelledby={titleId}>\n      <h1 id={titleId}>Filters</h1>\n      <FiltersForm idPrefix={idPrefix}/>\n    </Container>\n  )\n};\n\nexport default FiltersWrapper;","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport MdSearch from 'react-ionicons/lib/MdSearch';\nimport { Field } from 'redux-form'\nimport { reduxForm } from 'redux-form';\n\nimport '../stylesheets/searchBarButton.css';\n\nconst FieldInput = ({ input, meta }) => {\n  return (\n    <InputGroup>\n      <Form.Group\n        className=\"customSearchInput\"\n        controlId={`navForm-${input.name}`}\n      >\n        <Form.Label className=\"mr-2\" >Busca: </Form.Label>\n        <Form.Control\n          {...input}\n          type=\"text\"\n          meta={meta}\n        />\n      </Form.Group>\n      <InputGroup.Append>\n        <MdSearch\n          fontSize=\"2rem\"\n          color=\"#fff\"\n        />\n      </InputGroup.Append>\n    </InputGroup>\n  )\n}\n\nlet SearchBarForm = () => (\n  <Form inline className=\"justify-content-center mr-md-5\">\n    <Field\n      label=\"Nome\"\n      name=\"name\"\n      id=\"name\"\n      inputType=\"input\"\n      component={FieldInput}\n    />\n  </Form>\n);\n\nSearchBarForm = reduxForm({\n  form: 'localSearchForm'\n})(SearchBarForm);\n\nexport default SearchBarForm;\n\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_USER'\n  }\n}\n\nexport const clearUser = () => {\n  return dispatch => {\n    dispatch(\n      {\n        type: 'USER',\n        payload: null\n      });\n  }\n}\n\nexport const getUser = () => {\n  return dispatch => {\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/me`,\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'USER',\n          payload: resp.data\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Erro ao carregar as informações do usuário');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'USER', payload: {} },\n        loading()\n      ])\n    })\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport Filters from './filters/FiltersWrapper';\nimport SearchBarForm from \"./SearchBarForm\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getUser, clearUser } from '../store/user/userActions';\n\nimport '../stylesheets/navbar.css';\n\nfunction CustomNavbar({ token, user, getUser, logout }) {\n  useEffect(() => {\n    if (token) getUser();\n  }, [token, getUser]);\n\n  const logoutOnClick = (e) => {\n    e.preventDefault();\n    clearUser();\n    if (logout) logout();\n  }\n\n  return (\n    <Navbar fixed=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Spotifood</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end text-white\">\n        {token && user && (\n          <Nav>\n            <SearchBarForm />\n            <NavDropdown\n              className=\"loggedInUserDropdown\"\n              title={\n                <span>\n                  {user.images && user.images.length > 0 && (\n                    <Image alt=\"Logged In Profile Picture\" className=\"userImage\" src={user.images[0].url} roundedCircle />\n                  )}\n                  <b>{user.display_name}</b>\n                </span>\n              }\n              id=\"collasible-nav-dropdown\"\n            >\n              <NavDropdown.Item onClick={logoutOnClick}>Sair</NavDropdown.Item>\n            </NavDropdown>\n            <div className=\"filtersWrapperNav\">\n              <Filters idPrefix=\"navFilterForm\" />\n            </div>\n          </Nav>\n        )}\n      </Navbar.Collapse>\n    </Navbar >\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.user.loading,\n    user: state.user.user,\n    token: state.auth.access_token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getUser, clearUser }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomNavbar)\n\n","\nimport React from \"react\";\nimport Badge from 'react-bootstrap/Badge';\nimport { connect } from 'react-redux';\n\nimport { findInArrayOfObjects } from '../../store/filter/filterActions';\n\nconst FiltersBadges = ({ filtersForm, localSearchForm, filtersDefs }) => {\n  const filters = [];\n\n  if (filtersForm && filtersForm.values) {\n\n    Object.keys(filtersForm.values).forEach((key) => {\n      const obj = findInArrayOfObjects(filtersDefs, key)[0];\n      let name = key;\n      let value = filtersForm.values[key];\n      if (name.length > 0) name = name.name;\n\n      if (obj.validation && obj.validation.entityType === 'DATE_TIME')\n        value = value.toLocaleString();\n\n      filters.push({\n        key,\n        name: findInArrayOfObjects(filtersDefs, key)[0].name,\n        value,\n      })\n    })\n  }\n\n  if (localSearchForm && localSearchForm.values && localSearchForm.values.name) {\n    filters.push({\n      key: 'name',\n      name: 'Nome',\n      value: localSearchForm.values.name,\n    })\n  }\n\n\n  return (\n    <div>\n      {filters.map((filter, i) => (\n        <Badge\n          key={filter.key}\n          variant={`info ${(i > 0 && 'ml-4')}`}>\n          {filter.name}: {filter.value}\n        </Badge>\n      ))}\n    </div>\n  );\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    filtersForm: state.form.filtersForm,\n    localSearchForm: state.form.localSearchForm,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nexport default connect(mapStateToProps)(FiltersBadges)","import React, { useEffect } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Loader from './Loader';\nimport FiltersBadges from './filters/FiltersBadges';\nimport Playlist from \"./Playlist\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {getPlaylists} from '../store/playlist/playlistActions';\n\nlet setIntervalId;\nlet REFRESH_PL_MS = 30 * 1000;\n\nconst filterPlaylists = (playlists, localSearchForm) => {\n  if (!playlists || !playlists.items) return [];\n\n  if (!localSearchForm \n      || !localSearchForm.values \n      || !localSearchForm.values.name)\n    return playlists.items;\n\n  const searchStr = localSearchForm.values.name.toLowerCase();\n\n  return playlists.items.filter(playlist=>{\n    return playlist.name.toLowerCase().indexOf(searchStr) > -1;\n  });\n}\n\nfunction Playlists({ playlists, getPlaylists, loading, localSearchForm }) {\n  // When the component starts, load the playlits\n  // and set the playlist to be refreshed\n  useEffect(() => {\n    getPlaylists();\n    if (setIntervalId)\n      clearInterval(setIntervalId);\n    setIntervalId = setInterval(()=>{\n      getPlaylists()\n    },REFRESH_PL_MS);\n  }, [getPlaylists]);\n\n  const filteredPlaylists = filterPlaylists(playlists, localSearchForm);\n\n  return (\n    <Container fluid className=\"playlistsWrapper\" role=\"main\" aria-labelledby=\"playlistsTitle\">\n        <h1 id=\"playlistsTitle\">Playlists </h1>\n        <FiltersBadges/>\n        <Row>\n          {loading && (\n            <Loader/>\n          )}\n          {!loading && filteredPlaylists && filteredPlaylists.map((playlist,i) => (\n            <Col key={`playlist_wrapper_${i}`}>\n              <Playlist playlist={playlist}/>\n            </Col>\n          ))}\n          {(!filteredPlaylists || filteredPlaylists.length === 0) && !loading && (\n            <Col>\n              <p>Nenhuma playlist disponível</p>\n            </Col>\n          )}\n        </Row>\n    </Container>\n\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.playlists.loading,\n    playlists: state.playlists.list,\n    localSearchForm: state.form.localSearchForm,\n    token: state.auth.access_token,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getPlaylists }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists)\n\n","import React from \"react\";\nimport Image from 'react-bootstrap/Image';\n\nimport '../stylesheets/playlist.css';\n\nconst Playlist = ({ playlist }) => {\n  console.log(playlist);\n  return (\n    <div className=\"playlist text-center\">\n        {playlist.images && playlist.images.length > 0 && (\n          <Image alt={`\"${playlist.name}\" cover image`} src={playlist.images[0].url} rounded />\n        )}\n        <h2 class=\"mt-2 mb-2\">{playlist.name}</h2>\n        <p>\n          <b>{playlist.tracks && playlist.tracks.total}</b> faixas \n          - \n          Por <b>{playlist.owner && playlist.owner.display_name}</b>\n        </p>\n    </div>\n  );\n}\n\nexport default Playlist\n\n","import React, { useEffect } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from './Navbar';\nimport Filters from './filters/FiltersWrapper';\nimport Playlists from './Playlists';\nimport ReduxToastr from 'react-redux-toastr'\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getAuthEndpoint } from '../helpers/auth';\nimport { clearToken, getToken } from '../store/auth/authActions';\n\nimport '../stylesheets/App.css';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\n\nfunction App({ clearToken, getToken, access_token }) {\n  useEffect(() => {\n    getToken();\n  }, [getToken]);\n\n  const logout = () => {\n    clearToken();\n  }\n\n  return (\n    <div className=\"App h-100\">\n      <div className=\"body-bkg\" />\n      <Navbar logout={logout}/>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"top-left\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar\n        closeOnToastrClick />\n      {!access_token && (\n        <div className=\"contentLogin h-100 align-items-center justify-content-center text-white\">\n          <Jumbotron variant=\"dark\" className=\"loginWrapper\" role=\"main\" aria-labelledby=\"loginJTTitle\">\n            <h1 id=\"loginJTTitle\">Bem Vindo ao Spotifood</h1>\n            <p>\n              Faça login usando sua conta do Spotify e aproveite uma nova maneira de visualizar suas playlists!\n            </p>\n            <p>\n              <Button variant=\"success\" href={getAuthEndpoint()}>Login com Spotify</Button>\n            </p>\n          </Jumbotron>\n        </div>\n      )}\n      {access_token && (\n        <Container fluid className=\"contentWrapper h-100 text-white\">\n          <Row className=\"align-items-stretch h-100\">\n            <Col style={{ flexGrow: 1 }}>\n              <Playlists />\n            </Col>\n            <Col md=\"5\" lg=\"4\" xl=\"3\" className=\"filtersWrapper d-none d-md-flex\">\n              <Filters idPrefix=\"sideFilterForm\" />\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    access_token: state.auth.access_token,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ clearToken, getToken }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}