{"version":3,"sources":["store/configureStore.js","components/Loader.js","helpers/validations.js","helpers/auth.js","store/auth/authReducer.js","store/user/userReducer.js","store/filter/filterReducer.js","store/playlist/playlistReducer.js","store/rootReducer.js","store/auth/authActions.js","helpers/api.js","store/playlist/playlistActions.js","store/filter/filterActions.js","components/filters/FiltersForm.js","components/filters/FiltersWrapper.js","components/SearchBarForm.js","store/user/userActions.js","components/Navbar.js","components/filters/FiltersBadges.js","components/Playlists.js","components/Playlist.js","components/App.js","index.js"],"names":["store","Loader","props","react_default","a","createElement","className","Spinner_default","Object","assign","animation","role","validations","number","value","Number","isNaN","undefined","minValue","min","concat","maxValue","max","authSettings","endpoint","clientId","process","redirectUri","scopes","getAuthEndpoint","join","goToLogin","window","location","INITIAL_STATE","access_token","loading","user","defs","filters_query","local_filters_query","list","rootReducer","combineReducers","toastr","toastrReducer","auth","state","arguments","length","action","type","objectSpread","payload","filters","playlists","form","formReducer","clearToken","dispatch","localStorage","removeItem","getToken","hash","substring","split","reduce","initial","item","init","parts","decodeURIComponent","setItem","getItem","baseUrl","clearSession","apiRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","options","method","url","resp","_args","wrap","_context","prev","next","axios","headers","Authorization","getState","data","params","sent","t0","response","status","confirm","onOk","onCancel","abrupt","stop","apply","this","getErrorMessage","error","defaultMsg","message","e","getPlaylists","then","catch","errorMsg","console","getFiltersDefs","map","def","validate","values","unshift","key","validation","v","primitiveType","push","inputType","entityType","pattern","findInArrayOfObjects","array","id","filter","obj","updateFilterQuery","filtersForm","filtersDefs","syncErrors","keys","forEach","timestamp","replace","moment","format","renderDatePicker","input","react_datepicker_es","onChange","showTimeSelect","timeIntervals","shouldCloseOnSelect","dateFormat","selected","Date","FieldInput","_ref2","label","meta","idPrefix","_as","name","Form_default","Group","controlId","Label","Control","as","isInvalid","opt","i","FiltersForm","_ref3","useEffect","components_Loader","Row","Field","component","reduxForm","connect","bindActionCreators","FiltersWrapper","titleId","Container_default","fluid","aria-labelledby","filters_FiltersForm","InputGroup_default","Append","MdSearch_default","fontSize","color","inline","clearUser","getUser","CustomNavbar","token","getUserConnect","logout","clearUserConnect","Navbar_default","fixed","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav_default","components_SearchBarForm","NavDropdown_default","title","images","Image_default","alt","src","roundedCircle","display_name","Item","onClick","preventDefault","filters_FiltersWrapper","defaultProps","setIntervalId","localSearchForm","toLocaleString","Badge_default","Playlist","playlist","rounded","tracks","total","owner","Playlists","getPlaylistsConnect","clearInterval","setInterval","filteredPlaylists","items","searchStr","toLowerCase","indexOf","filterPlaylists","filters_FiltersBadges","Row_default","Col_default","components_Playlist","App","clearTokenConnect","getTokenConnect","accessToken","components_Navbar","lib_default","timeOut","newestOnTop","preventDuplicates","position","transitionIn","transitionOut","progressBar","closeOnToastrClick","Jumbotron_default","Button_default","href","style","flexGrow","components_Playlists","md","lg","xl","initialState","createStore","applyMiddleware","thunk","multi","promise","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.af708fe7.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './rootReducer';\n\nlet store; // eslint-disable-line import/no-mutable-exports\n\nconst configureStore = (initialState) => {\n  store = createStore(rootReducer, initialState, applyMiddleware(thunk, multi, promise));\n  return store;\n};\n\nexport { configureStore, store };\n","import React from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport '../stylesheets/loader.css';\n\nconst Loader = props => (\n  <div className=\"loaderWrapper\">\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      {...props}\n    >\n      <span className=\"sr-only\">Carregando...</span>\n    </Spinner>\n  </div>\n);\n\nexport default Loader;\n","const validations = {\n  number: value => (value && Number.isNaN(Number(value)) ? 'Deve ser um número' : undefined),\n\n  minValue: min => value => (value && value < min ? `Deve ser pelo menos ${min}` : undefined),\n\n  maxValue: max => value => (value && value > max ? `Não pode ser maior que ${max}` : undefined),\n};\n\nexport default validations;\n","const authSettings = {\n  endpoint: 'https://accounts.spotify.com/authorize',\n  clientId: process.env.REACT_APP_CLIENT_ID,\n  redirectUri: process.env.NODE_ENV === 'production' ? process.env.REACT_APP_PROD_REDIRECT_URL : process.env.REACT_APP_DEV_REDIRECT_URL,\n  scopes: [],\n};\n\nexport const ACCESS_TOKEN_KEY = 'access_token';\n\n/**\n *  Generate the auth endpoint given the auth parameters\n */\nexport const getAuthEndpoint = () => `${authSettings.endpoint}?client_id=${authSettings.clientId}&redirect_uri=${authSettings.redirectUri}&scope=${authSettings.scopes.join('%20')}&response_type=token&show_dialog=true`;\n\nexport const goToLogin = () => {\n  window.location.assign(getAuthEndpoint());\n};\n\n/**\n * Given the url hash string, parse it and return\n * an object with all YRL parameters\n*/\nexport const parseUrlHash = urlHash => urlHash\n  .substring(1)\n  .split('&')\n  .reduce((initial, item) => {\n    const init = initial;\n    if (item) {\n      const parts = item.split('=');\n      init[parts[0]] = decodeURIComponent(parts[1]);\n    }\n    return init;\n  }, {});\n","const INITIAL_STATE = {\n  access_token: null,\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'CLEAR_TOKEN':\n      return { ...state, access_token: null }\n    case 'GET_TOKEN':\n      return { ...state, access_token: action.payload }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  user: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'USER':\n      return { ...state, user: action.payload }\n    case 'LOADING_USER':\n      return { ...state, loading: !state.loading }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  defs: [],\n  filters_query: {},\n  local_filters_query: {}\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'LOAD_FILTERS_DEFS':\n      return { ...state, defs: action.payload }\n    case 'LOADING_FILTERS':\n      return { ...state, loading: !state.loading }\n    case 'UPDATE_FILTERS_QUERY':\n      return { ...state, filters_query: action.payload }\n    case 'UPDATE_LOCAL_FILTERS_QUERY':\n      return { ...state, local_filters_query: action.payload }\n    default:\n      return state\n  }\n}\n","const INITIAL_STATE = {\n  loading: false,\n  list: []\n}\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case 'PLAYLISTS':\n      return { ...state, list: action.payload }\n    case 'LOADING_PLAYLISTS':\n      return { ...state, loading: !state.loading }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux';\nimport { reducer as toastrReducer } from 'react-redux-toastr';\nimport { reducer as formReducer } from 'redux-form';\nimport auth from './auth/authReducer';\nimport user from './user/userReducer';\nimport filters from './filter/filterReducer';\nimport playlists from './playlist/playlistReducer';\n\nconst rootReducer = combineReducers({\n  toastr: toastrReducer,\n  auth,\n  user,\n  filters,\n  playlists,\n  form: formReducer,\n});\n\nexport default rootReducer;\n","import {ACCESS_TOKEN_KEY, parseUrlHash} from '../../helpers/auth'\n\nexport const clearToken = () => {\n  return dispatch => {\n    localStorage.removeItem(ACCESS_TOKEN_KEY);\n    dispatch({\n      type: 'CLEAR_TOKEN'\n    });\n  }\n}\n\nexport const getToken = () => {\n  return dispatch => {\n    const hash = parseUrlHash(window.location.hash);\n\n    window.location.hash = \"\";\n\n    if (hash.access_token) {\n      localStorage.setItem(ACCESS_TOKEN_KEY, hash.access_token);\n    }\n\n    const currentToken = localStorage.getItem(ACCESS_TOKEN_KEY);\n\n    dispatch({\n      type: 'GET_TOKEN',\n      payload: currentToken\n    });\n  }\n}\n","import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { goToLogin } from './auth';\nimport { store } from '../store/configureStore';\nimport { clearToken } from '../store/auth/authActions';\n\nconst baseUrl = 'https://api.spotify.com/v1';\n\nconst clearSession = () => {\n  store.dispatch(clearToken());\n};\n\nconst apiRequest = async (options = {}) => {\n  const method = (options.method) ? options.method : 'get';\n  const url = (options.url) ? options.url : baseUrl;\n\n  let resp;\n\n  try {\n    resp = await axios({\n      method,\n      url,\n      headers: {\n        Authorization: `Bearer ${store.getState().auth.access_token}`,\n        ...options.headers,\n      },\n      data: options.data,\n      params: options.params,\n    });\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      toastr.confirm('Sessão expirada. Deseja entrar novamente?', {\n        onOk: goToLogin,\n        onCancel: clearSession,\n      });\n    }\n    throw error;\n  }\n\n  return resp;\n};\n\n/**\n * Given an API error, and a default error message,\n * tries to get the response error message. If not available\n * returns the default message.\n * @param {objet} error\n * @param {string} defaultMsg\n */\nconst getErrorMessage = (error, defaultMsg) => {\n  try {\n    return error.response.data.error.message;\n  } catch (e) {\n    return defaultMsg;\n  }\n};\n\nexport {\n  baseUrl,\n  apiRequest,\n  getErrorMessage,\n};\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_PLAYLISTS'\n  }\n}\n\nexport const getPlaylists = () => {\n  return (dispatch,getState) => {\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/browse/featured-playlists`,\n      params: getState().filters.filters_query\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'PLAYLISTS',\n          payload: resp.data.playlists\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Erro ao carregar lista de playlists');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'PLAYLISTS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n","import { toastr } from 'react-redux-toastr';\nimport axios from 'axios';\nimport validations from '../../helpers/validations';\nimport { getPlaylists } from '../playlist/playlistActions';\nimport moment from 'moment';\n\nconst FILTER_URL = 'https://www.mocky.io/v2/5a25fade2e0000213aa90776';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_FILTERS'\n  }\n}\n\nconst parseFilters = (filters) => filters.map(def => {\n  def.type =  'input';\n  def.validate = [];\n\n  if (def.values){\n    def.type = 'select-multi';\n    // Add default empty option on all selects\n    def.values.unshift({\n      key: '',\n      value: '',\n    });\n  }\n\n  if (def.validation) {\n    const v = def.validation;\n\n    if (v.primitiveType === 'INTEGER') {\n      def.validate.push(validations.number);\n      def.inputType = 'number';\n    }\n\n    if (v.min)\n      def.validate.push(validations.minValue(v.min));\n\n    if (v.max)\n      def.validate.push(validations.maxValue(v.max));\n\n    if (v.entityType)\n      def.entityType = v.entityType;\n\n    if (v.pattern)\n      def.pattern = v.pattern;\n\n  }\n  return def;\n});\n\nexport const getFiltersDefs = () => {\n  return dispatch => {\n    dispatch(loading());\n\n    axios(FILTER_URL).then(resp => {\n      const defs = resp.data.filters;\n\n      dispatch([\n        {\n          type: 'LOAD_FILTERS_DEFS',\n          payload: parseFilters(defs)\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      toastr.error('Error', 'Erro ao carregar filtros')\n      dispatch([\n        { type: 'LOAD_FILTERS_DEFS', payload: {} },\n        loading()\n      ]);\n    });\n  }\n}\n\n\nexport const findInArrayOfObjects = (array, id) => array.filter(obj => obj.id === id);\n\nexport const updateFilterQuery = () => {\n  return (dispatch, getState) => {\n    const state = getState();\n    const form = state.form.filtersForm;\n    const filtersDefs = state.filters.defs;\n    const values = (form.values) ? form.values : {};\n\n    // Remove all inputs with errors\n    if (form.syncErrors) {\n      Object.keys(form.syncErrors).forEach(key => delete values[key]);\n    }\n\n    // Parse timestamp\n    if (values.timestamp) {\n      try {\n        const def = findInArrayOfObjects(filtersDefs, 'timestamp')[0];\n        // The pattern used on our filters definitions is different than the\n        // pattern used by moment\n        let pattern = def.pattern\n          .replace('yyyy', 'YYYY')\n          .replace('dd', 'DD');\n        values.timestamp = moment(values.timestamp).format(pattern);\n        // Error parsing filter - delete and log\n      } catch (e) {\n        console.error('Error while parsing timestamp value.', e);\n        delete values.timestamp;\n      }\n    }\n\n    return dispatch([\n      {\n        type: 'UPDATE_FILTERS_QUERY',\n        payload: values,\n      },\n      getPlaylists()\n    ]);\n  }\n}\n","import React, { useEffect } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Loader from '../Loader';\nimport DatePicker from 'react-datepicker';\nimport { Field } from 'redux-form'\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getFiltersDefs, updateFilterQuery } from '../../store/filter/filterActions';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst renderDatePicker = ({ input }) => {\n  return (\n    <div>\n      <DatePicker\n        id={input.id}\n        onChange={input.onChange}\n        showTimeSelect\n        timeIntervals={1}\n        shouldCloseOnSelect={false}\n        className=\"form-control\"\n        dateFormat=\"dd/MM/yyyy h:mm aa\"\n        selected={input.value ? new Date(input.value) : null}\n      />\n    </div>\n  )\n};\n\nconst FieldInput = ({ input, label, meta, type, min, max, values, inputType, entityType, idPrefix }) => {\n  let _as = type;\n  if (type === 'select-multi')\n    _as = 'select';\n  if (entityType === 'DATE_TIME')\n    _as = renderDatePicker;\n\n  input.id = `${idPrefix}-${input.name}`;\n\n  return (\n    <Form.Group controlId={input.id}>\n      <Form.Label>{label}</Form.Label>\n      <Form.Control\n        as={_as}\n        name={input.name}\n        type={inputType}\n        min={min}\n        max={max}\n        value={input.value}\n        onChange={input.onChange}\n        isInvalid={meta.error}\n        meta={meta}\n        input={input}\n      >\n        {values && values.map((opt, i) => (\n          <option key={`filter_option_${input.name}_${i}`} value={opt.value}>{opt.name}</option>\n        ))}\n      </Form.Control>\n      {meta.error && (\n        <div className=\"invalid-feedback\">{meta.error}</div>\n      )}\n    </Form.Group>\n  )\n}\n\nlet FiltersForm = ({ filtersDefs, getFiltersDefs, updateFilterQuery, loading, idPrefix }) => {\n  useEffect(() => {\n    getFiltersDefs();\n  }, [getFiltersDefs]);\n\n  return (\n    <Form>\n      {loading && (\n        <Loader />\n      )}\n      {filtersDefs && filtersDefs.map((filter, i) => (\n        <Form.Row key={`filters_api_${i}`}>\n          <Field\n            {...filter}\n            label={filter.name}\n            name={filter.id}\n            idPrefix={idPrefix}\n            inputType={filter.inputType}\n            component={FieldInput}\n          >\n          </Field>\n        </Form.Row>\n      ))}\n    </Form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.filters.loading,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ getFiltersDefs, updateFilterQuery }, dispatch)\n}\n\nFiltersForm = reduxForm({\n  form: 'filtersForm',\n  onChange: (values, dispatch, props) => {\n    dispatch(updateFilterQuery(values));\n  }\n})(FiltersForm);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersForm)","\nimport React from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport FiltersForm from './FiltersForm';\n\nimport '../../stylesheets/filtersWrapper.css';\n\nconst FiltersWrapper = ({idPrefix}) => {\n  const titleId= `${idPrefix}-title`;\n  return (\n    <Container fluid role=\"form\" aria-labelledby={titleId}>\n      <h1 id={titleId}>Filters</h1>\n      <FiltersForm idPrefix={idPrefix}/>\n    </Container>\n  )\n};\n\nexport default FiltersWrapper;","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport MdSearch from 'react-ionicons/lib/MdSearch';\nimport { Field, reduxForm } from 'redux-form';\nimport PropTypes from 'prop-types';\n\nimport '../stylesheets/searchBarButton.css';\n\nconst FieldInput = ({ input, meta }) => (\n  <InputGroup>\n    <Form.Group\n      className=\"customSearchInput\"\n      controlId={`navForm-${input.name}`}\n    >\n      <Form.Label className=\"mr-2\">Busca: </Form.Label>\n      <Form.Control\n        {...input}\n        type=\"text\"\n        meta={meta}\n      />\n    </Form.Group>\n    <InputGroup.Append>\n      <MdSearch\n        fontSize=\"2rem\"\n        color=\"#fff\"\n      />\n    </InputGroup.Append>\n  </InputGroup>\n);\n\nFieldInput.propTypes = {\n  input: PropTypes.object.isRequired,\n  meta: PropTypes.object.isRequired,\n};\n\nconst SearchBarForm = () => (\n  <Form inline className=\"justify-content-center mr-md-5\">\n    <Field\n      label=\"Nome\"\n      name=\"name\"\n      id=\"name\"\n      inputType=\"input\"\n      component={FieldInput}\n    />\n  </Form>\n);\n\nexport default reduxForm({\n  form: 'localSearchForm',\n})(SearchBarForm);\n","import { apiRequest, baseUrl, getErrorMessage } from '../../helpers/api';\nimport { toastr } from 'react-redux-toastr';\n\nexport const loading = () => {\n  return {\n    type: 'LOADING_USER'\n  }\n}\n\nexport const clearUser = () => {\n  return dispatch => {\n    dispatch(\n      {\n        type: 'USER',\n        payload: null\n      });\n  }\n}\n\nexport const getUser = () => {\n  return dispatch => {\n    dispatch(loading());\n    \n    apiRequest({\n      method: 'get',\n      url: `${baseUrl}/me`,\n    }).then(resp => {\n      dispatch([\n        {\n          type: 'USER',\n          payload: resp.data\n        },\n        loading()\n      ]);\n    }).catch(error => {\n      let errorMsg = getErrorMessage(error,'Erro ao carregar as informações do usuário');\n      console.error(errorMsg, error);\n      toastr.error('Error', errorMsg);\n      dispatch([\n        { type: 'USER', payload: {} },\n        loading()\n      ])\n    })\n  }\n}\n","import React, { useEffect } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Image from 'react-bootstrap/Image';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Filters from './filters/FiltersWrapper';\nimport SearchBarForm from './SearchBarForm';\nimport { getUser, clearUser } from '../store/user/userActions';\n\nimport '../stylesheets/navbar.css';\n\nconst CustomNavbar = ({\n  token, user, getUserConnect, logout, clearUserConnect,\n}) => {\n  useEffect(() => {\n    if (token) getUserConnect();\n  }, [token, getUserConnect]);\n\n  const logoutOnClick = (e) => {\n    e.preventDefault();\n    clearUserConnect();\n    if (logout) logout();\n  };\n\n  return (\n    <Navbar fixed=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand>Spotifood</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\" className=\"justify-content-end text-white\">\n        {token && user && (\n          <Nav>\n            <SearchBarForm />\n            <NavDropdown\n              className=\"loggedInUserDropdown\"\n              title={(\n                <span>\n                  {user.images && user.images.length > 0 && (\n                    <Image alt=\"Logged In Profile Picture\" className=\"userImage\" src={user.images[0].url} roundedCircle />\n                  )}\n                  <b>{user.display_name}</b>\n                </span>\n              )}\n              id=\"collasible-nav-dropdown\"\n            >\n              <NavDropdown.Item onClick={logoutOnClick}>Sair</NavDropdown.Item>\n            </NavDropdown>\n            <div className=\"filtersWrapperNav\">\n              <Filters idPrefix=\"navFilterForm\" />\n            </div>\n          </Nav>\n        )}\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nCustomNavbar.propTypes = {\n  token: PropTypes.string,\n  user: PropTypes.object,\n  getUserConnect: PropTypes.func.isRequired,\n  clearUserConnect: PropTypes.func.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nCustomNavbar.defaultProps = {\n  token: '',\n  user: {},\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user.user,\n    token: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getUserConnect: getUser,\n    clearUserConnect: clearUser,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomNavbar);\n","\nimport React from \"react\";\nimport Badge from 'react-bootstrap/Badge';\nimport { connect } from 'react-redux';\n\nimport { findInArrayOfObjects } from '../../store/filter/filterActions';\n\nconst FiltersBadges = ({ filtersForm, localSearchForm, filtersDefs }) => {\n  const filters = [];\n\n  if (filtersForm && filtersForm.values) {\n\n    Object.keys(filtersForm.values).forEach((key) => {\n      const obj = findInArrayOfObjects(filtersDefs, key)[0];\n      let name = key;\n      let value = filtersForm.values[key];\n      if (name.length > 0) name = name.name;\n\n      if (obj.validation && obj.validation.entityType === 'DATE_TIME')\n        value = value.toLocaleString();\n\n      filters.push({\n        key,\n        name: findInArrayOfObjects(filtersDefs, key)[0].name,\n        value,\n      })\n    })\n  }\n\n  if (localSearchForm && localSearchForm.values && localSearchForm.values.name) {\n    filters.push({\n      key: 'name',\n      name: 'Nome',\n      value: localSearchForm.values.name,\n    })\n  }\n\n  return (\n    <div>\n      {filters.map((filter, i) => (\n        <Badge\n          key={filter.key}\n          variant={`info ${(i > 0 && 'ml-4')}`}>\n          {filter.name}: {filter.value}\n        </Badge>\n      ))}\n    </div>\n  );\n\n};\n\nfunction mapStateToProps(state) {\n  return {\n    filtersForm: state.form.filtersForm,\n    localSearchForm: state.form.localSearchForm,\n    filtersDefs: state.filters.defs,\n  }\n}\n\nexport default connect(mapStateToProps)(FiltersBadges)","import React, { useEffect } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Loader from './Loader';\nimport FiltersBadges from './filters/FiltersBadges';\nimport Playlist from './Playlist';\nimport { getPlaylists } from '../store/playlist/playlistActions';\n\nlet setIntervalId;\nconst REFRESH_PL_MS = 30 * 1000;\n\nconst filterPlaylists = (playlists, localSearchForm) => {\n  if (!playlists || !playlists.items) return [];\n\n  if (!localSearchForm.values\n      || !localSearchForm.values.name) return playlists.items;\n\n  const searchStr = localSearchForm.values.name.toLowerCase();\n\n  return playlists.items.filter(playlist => playlist.name.toLowerCase().indexOf(searchStr) > -1);\n};\n\nconst Playlists = ({\n  playlists, getPlaylistsConnect, loading, localSearchForm,\n}) => {\n  // When the component starts, load the playlits\n  // and set the playlist to be refreshed\n  useEffect(() => {\n    getPlaylistsConnect();\n    if (setIntervalId) clearInterval(setIntervalId);\n    setIntervalId = setInterval(() => {\n      getPlaylistsConnect();\n    }, REFRESH_PL_MS);\n  }, [getPlaylistsConnect]);\n\n  const filteredPlaylists = filterPlaylists(playlists, localSearchForm);\n\n  return (\n    <Container fluid className=\"playlistsWrapper\" role=\"main\" aria-labelledby=\"playlistsTitle\">\n      <h1 id=\"playlistsTitle\">Playlists </h1>\n      <FiltersBadges />\n      <Row>\n        {loading && (\n        <Loader />\n        )}\n        {!loading && filteredPlaylists && filteredPlaylists.map(playlist => (\n          <Col key={`playlist_wrapper_${playlist.id}`}>\n            <Playlist playlist={playlist} />\n          </Col>\n        ))}\n        {(!filteredPlaylists || filteredPlaylists.length === 0) && !loading && (\n        <Col>\n          <p>Nenhuma playlist disponível</p>\n        </Col>\n        )}\n      </Row>\n    </Container>\n\n  );\n};\n\nPlaylists.propTypes = {\n  playlists: PropTypes.array,\n  getPlaylistsConnect: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  localSearchForm: PropTypes.object,\n};\n\nPlaylists.defaultProps = {\n  playlists: [],\n  loading: true,\n  localSearchForm: {},\n};\n\nfunction mapStateToProps(state) {\n  return {\n    loading: state.playlists.loading,\n    playlists: state.playlists.list,\n    localSearchForm: state.form.localSearchForm,\n    token: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getPlaylistsConnect: getPlaylists,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlists);\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport PropTypes from 'prop-types';\n\nimport '../stylesheets/playlist.css';\n\nconst Playlist = ({ playlist }) => (\n  <div className=\"playlist text-center\">\n    {playlist.images && playlist.images.length > 0 && (\n      <Image alt={`\"${playlist.name}\" cover image`} src={playlist.images[0].url} rounded />\n    )}\n    <h2 className=\"mt-2 mb-2\">{playlist.name}</h2>\n    <p>\n      <b>{playlist.tracks && playlist.tracks.total}</b>\n      {' '}\nfaixas - Por\n      <b>{playlist.owner && playlist.owner.display_name}</b>\n    </p>\n  </div>\n);\n\nPlaylist.propTypes = {\n  playlist: PropTypes.object.isRequired,\n};\n\nexport default Playlist;\n","import React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\nimport ReduxToastr from 'react-redux-toastr';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport Navbar from './Navbar';\nimport Filters from './filters/FiltersWrapper';\nimport Playlists from './Playlists';\nimport { getAuthEndpoint } from '../helpers/auth';\nimport { clearToken, getToken } from '../store/auth/authActions';\n\nimport '../stylesheets/App.css';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\n\nconst App = ({ clearTokenConnect, getTokenConnect, accessToken }) => {\n  useEffect(() => {\n    getTokenConnect();\n  }, [getTokenConnect]);\n\n  const logout = () => {\n    clearTokenConnect();\n  };\n\n  return (\n    <div className=\"App h-100\">\n      <div className=\"body-bkg\" />\n      <Navbar logout={logout} />\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates\n        position=\"top-left\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar\n        closeOnToastrClick\n      />\n      {!accessToken && (\n        <div className=\"contentLogin h-100 align-items-center justify-content-center text-white\">\n          <Jumbotron variant=\"dark\" className=\"loginWrapper\" role=\"main\" aria-labelledby=\"loginJTTitle\">\n            <h1 id=\"loginJTTitle\">Bem Vindo ao Spotifood</h1>\n            <p>\n              Faça login usando sua conta do Spotify e aproveite uma nova maneira de visualizar\n              suas playlists!\n            </p>\n            <p>\n              <Button variant=\"success\" href={getAuthEndpoint()}>Login com Spotify</Button>\n            </p>\n          </Jumbotron>\n        </div>\n      )}\n      {accessToken && (\n        <Container fluid className=\"contentWrapper h-100 text-white\">\n          <Row className=\"align-items-stretch h-100\">\n            <Col style={{ flexGrow: 1 }}>\n              <Playlists />\n            </Col>\n            <Col md=\"5\" lg=\"4\" xl=\"3\" className=\"filtersWrapper d-none d-md-flex\">\n              <Filters idPrefix=\"sideFilterForm\" />\n            </Col>\n          </Row>\n        </Container>\n      )}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  clearTokenConnect: PropTypes.func.isRequired,\n  getTokenConnect: PropTypes.func.isRequired,\n  accessToken: PropTypes.string,\n};\n\nApp.defaultProps = {\n  accessToken: null,\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    accessToken: state.auth.access_token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    clearTokenConnect: clearToken,\n    getTokenConnect: getToken,\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>, document.getElementById('root')\n);"],"sourceRoot":""}